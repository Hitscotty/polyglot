
==================== FINAL INTERFACE ====================
2016-12-21 21:14:44.081462 UTC

interface main@main:Main [family instance module] 8001
  interface hash: bf844373d2aadf3e25f5738a8a516926
  ABI hash: d4cc134989e82540ce7b97262330dfe8
  export-list hash: a3962d679ed0d1e7c3ffb1ac23da3ed3
  orphan hash: 94c403223223d398d4b05275b6afbb36
  flag hash: ed95ae29f0937fedf556eebbf82e0a6a
  sig of: Nothing
  used TH splices: False
  where
exports:
  Main.allUsers
  Main.blaze
  Main.bob
  Main.jenny
  Main.main
  Main.matchesId
  Main.routes
  Main.User{Main.User userId userName}
module dependencies: Views.Index
package dependencies: aeson-0.11.2.1@aeson-0.11.2.1-ByXhYhAOjwT2lX0EEzDlEU
                      ansi-terminal-0.6.2.3@ansi-terminal-0.6.2.3-448ipfN5j28Ha0AgPiJmdI
                      appar-0.1.4@appar-0.1.4-1in4Ewd8JBkAYDZSWXLSe0
                      array-0.5.1.1@array-0.5.1.1
                      async-2.1.1@async-2.1.1-xFiBzw9xoB8HPZAuxUY2o
                      attoparsec-0.13.1.0@attoparsec-0.13.1.0-2AyzLuPV4T95RcYDl03Ghe
                      auto-update-0.1.4@auto-update-0.1.4-GAesfFmqoZzBz6e09kRyzb
                      base-4.9.0.0 binary-0.8.3.0@binary-0.8.3.0
                      blaze-builder-0.4.0.2@blaze-builder-0.4.0.2-6Lw6V3wDhf3KDMasjNOEeG
                      blaze-html-0.8.1.3@blaze-html-0.8.1.3-7Mt9x337mv4IO4jcUMt8gl
                      blaze-markup-0.7.1.1@blaze-markup-0.7.1.1-GGM5nP9jZuZ9fymRS32rvZ
                      byteorder-1.0.4@byteorder-1.0.4-BbL4c17EpZrL9PcZm0xys9
                      bytestring-0.10.8.1@bytestring-0.10.8.1
                      case-insensitive-1.2.0.7@case-insensitive-1.2.0.7-FDS9muZSKvyFFsDxjwuYX9
                      containers-0.5.7.1@containers-0.5.7.1
                      cryptonite-0.19@cryptonite-0.19-G9PYO4oOEqhDTta2u9rAaU
                      data-default-class-0.1.2.0@data-default-class-0.1.2.0-FYQpjIylblBDctdkHAFeXA
                      deepseq-1.4.2.0@deepseq-1.4.2.0 directory-1.2.6.2@directory-1.2.6.2
                      dlist-0.8.0.2@dlist-0.8.0.2-GWAMmbX9rLg3tqrbOizHGv
                      easy-file-0.2.1@easy-file-0.2.1-bAUkz2rC2kFhBbPjw2Of5
                      exceptions-0.8.3@exceptions-0.8.3-7py7fmRxowDFpHmiHGKrTb
                      expiring-cache-map-0.0.6.1@expiring-cache-map-0.0.6.1-HlALgqlCMMKKnaw3nqLlQq
                      fast-logger-2.4.7@fast-logger-2.4.7-9mz5trxoQfRK4VvzRSNtIb
                      filepath-1.4.1.0@filepath-1.4.1.0
                      ghc-boot-th-8.0.1@ghc-boot-th-8.0.1 ghc-prim-0.5.0.0
                      hashable-1.2.4.0@hashable-1.2.4.0-Ctl752zbguF6QanxurLOm2
                      http-date-0.0.6.1@http-date-0.0.6.1-GxuKyJS3TPnDu1ymqrm6RW
                      http-types-0.9.1@http-types-0.9.1-BTSIP6lzG5DE6u136Payws
                      http2-1.6.2@http2-1.6.2-7iyxxNi2iWDCArthWistHQ integer-gmp-1.0.0.1
                      iproute-1.7.1@iproute-1.7.1-9hsGfRvggCmFA0ueZi5Sd9
                      lifted-base-0.2.3.8@lifted-base-0.2.3.8-KLkd0w1UJqu6nE8oVTTEBy
                      memory-0.13@memory-0.13-ABHR5331zHK9scHPRr7afU
                      mime-types-0.1.0.7@mime-types-0.1.0.7-AnUYMmJkgUZLmjf93DTg5F
                      mmorph-1.0.9@mmorph-1.0.9-DmSwQqk5nLj7roLAcydGz
                      monad-control-1.0.1.0@monad-control-1.0.1.0-HoNEBoNfniX3vjSfkI7WTT
                      mtl-2.2.1@mtl-2.2.1-6qsR1PHUy5lL47Hpoa4jCM
                      network-2.6.3.1@network-2.6.3.1-G4Up1CPKbp7DeFsnywOnGG
                      old-locale-1.0.0.7@old-locale-1.0.0.7-6glXNhHF891B41ZfuI8hU8
                      old-time-1.1.0.3@old-time-1.1.0.3-IcvdkJUsE9M8t3io8peAEp
                      primitive-0.6.1.0@primitive-0.6.1.0-Ip44DqhfCp21tTUYbecwa
                      psqueues-0.2.2.3@psqueues-0.2.2.3-FfDllpzu6XJAWLRDPnMf0s
                      random-1.1@random-1.1-54KmMHXjttlERYcr1mvsAe
                      regex-base-0.93.2@regex-base-0.93.2-71isvdwnRNrGKtKYo9rpQd
                      regex-compat-0.95.1@regex-compat-0.95.1-4nLo9klb6Pk7Tun1BAC3he
                      regex-posix-0.95.2@regex-posix-0.95.2-BbcuFE4RwTG3oQUmzAVjm
                      resourcet-1.1.8.1@resourcet-1.1.8.1-1XWaZ7RmVde330DM5PRI3Z
                      scientific-0.3.4.9@scientific-0.3.4.9-ENrtAw13zTS8y4klTK3l4D
                      scotty-0.11.0@scotty-0.11.0-IYgZL9vvPk2Jcr98uCm7GL
                      simple-sendfile-0.2.25@simple-sendfile-0.2.25-FZS0Stqtwd5AOyFRQgM4IV
                      stm-2.4.4.1@stm-2.4.4.1-4z2NRWnB0NIIUvSJsHW0kF
                      streaming-commons-0.1.16@streaming-commons-0.1.16-3F5ilGqdpiI2CBV4Mk7gyK
                      stringsearch-0.3.6.6@stringsearch-0.3.6.6-KFZuUgmBRr4GSrTHv7XvSl
                      tagged-0.8.5@tagged-0.8.5-CtgV6EcN0do8F92i1S6iYx
                      template-haskell-2.11.0.0
                      text-1.2.2.1@text-1.2.2.1-9Yh8rJoh8fO2JMLWffT3Qs
                      time-1.6.0.1@time-1.6.0.1 transformers-0.5.2.0@transformers-0.5.2.0
                      transformers-base-0.4.4@transformers-base-0.4.4-25SoAegOdaF8rLEnnb5jPI
                      unix-2.7.2.0@unix-2.7.2.0
                      unix-compat-0.4.3.1@unix-compat-0.4.3.1-GamCWWfiT0318wIeUlpE1K
                      unix-time-0.3.7@unix-time-0.3.7-HcxGsrnTmTlC98pyanzoMW
                      unordered-containers-0.2.7.1@unordered-containers-0.2.7.1-9LORRyFpDhM8ZtazbO2Bhp
                      vault-0.3.0.6@vault-0.3.0.6-5bJ8O372CGi2589QkJEjhz
                      vector-0.11.0.0@vector-0.11.0.0-6uB77qGCxR6GPLxI2sqsX3
                      wai-3.2.1.1@wai-3.2.1.1-CeM04LUPgYiCadXD3Mx7Tl
                      wai-extra-3.0.19@wai-extra-3.0.19-4v3vPVzprOS42uMv9YoHx1
                      wai-logger-2.3.0@wai-logger-2.3.0-3QHA3OGabuDI2Hrp9iAnXT
                      wai-middleware-static-0.8.1@wai-middleware-static-0.8.1-18slCMpIGmVIS5lJoasFfN
                      warp-3.2.9@warp-3.2.9-51z5xDNQBTqJXlVD2waWc8
                      word8-0.1.2@word8-0.1.2-2E1SgvvAV2fK8vZPDHbRan
orphans: aeson-0.11.2.1@aeson-0.11.2.1-ByXhYhAOjwT2lX0EEzDlEU:Data.Aeson.Types.Generic
         aeson-0.11.2.1@aeson-0.11.2.1-ByXhYhAOjwT2lX0EEzDlEU:Data.Aeson.Types.Instances
         attoparsec-0.13.1.0@attoparsec-0.13.1.0-2AyzLuPV4T95RcYDl03Ghe:Data.Attoparsec.ByteString.Char8
         attoparsec-0.13.1.0@attoparsec-0.13.1.0-2AyzLuPV4T95RcYDl03Ghe:Data.Attoparsec.Text.Internal
         base-4.9.0.0:GHC.Base base-4.9.0.0:GHC.Float
         binary-0.8.3.0@binary-0.8.3.0:Data.Binary.Generic
         bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Builder
         hashable-1.2.4.0@hashable-1.2.4.0-Ctl752zbguF6QanxurLOm2:Data.Hashable.Generic
         network-2.6.3.1@network-2.6.3.1-G4Up1CPKbp7DeFsnywOnGG:Network.Socket
         regex-base-0.93.2@regex-base-0.93.2-71isvdwnRNrGKtKYo9rpQd:Text.Regex.Base.Context
         regex-posix-0.95.2@regex-posix-0.95.2-BbcuFE4RwTG3oQUmzAVjm:Text.Regex.Posix.ByteString
         regex-posix-0.95.2@regex-posix-0.95.2-BbcuFE4RwTG3oQUmzAVjm:Text.Regex.Posix.ByteString.Lazy
         regex-posix-0.95.2@regex-posix-0.95.2-BbcuFE4RwTG3oQUmzAVjm:Text.Regex.Posix.Sequence
         regex-posix-0.95.2@regex-posix-0.95.2-BbcuFE4RwTG3oQUmzAVjm:Text.Regex.Posix.String
         stm-2.4.4.1@stm-2.4.4.1-4z2NRWnB0NIIUvSJsHW0kF:Control.Monad.STM
         text-1.2.2.1@text-1.2.2.1-9Yh8rJoh8fO2JMLWffT3Qs:Data.Text
         text-1.2.2.1@text-1.2.2.1-9Yh8rJoh8fO2JMLWffT3Qs:Data.Text.Lazy
         text-1.2.2.1@text-1.2.2.1-9Yh8rJoh8fO2JMLWffT3Qs:Data.Text.Show
         time-1.6.0.1@time-1.6.0.1:Data.Time.Calendar.Gregorian
         time-1.6.0.1@time-1.6.0.1:Data.Time.Format.Parse
         time-1.6.0.1@time-1.6.0.1:Data.Time.LocalTime.LocalTime
         transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.Error
         unix-time-0.3.7@unix-time-0.3.7-HcxGsrnTmTlC98pyanzoMW:Data.UnixTime.Diff
         vector-0.11.0.0@vector-0.11.0.0-6uB77qGCxR6GPLxI2sqsX3:Data.Vector.Fusion.Bundle
         vector-0.11.0.0@vector-0.11.0.0-6uB77qGCxR6GPLxI2sqsX3:Data.Vector.Unboxed
family instance modules: attoparsec-0.13.1.0@attoparsec-0.13.1.0-2AyzLuPV4T95RcYDl03Ghe:Data.Attoparsec.Internal.Types
                         base-4.9.0.0:Control.Applicative base-4.9.0.0:Data.Complex
                         base-4.9.0.0:Data.Either base-4.9.0.0:Data.Functor.Compose
                         base-4.9.0.0:Data.Functor.Const base-4.9.0.0:Data.Functor.Identity
                         base-4.9.0.0:Data.Functor.Product base-4.9.0.0:Data.List.NonEmpty
                         base-4.9.0.0:Data.Monoid base-4.9.0.0:Data.Semigroup
                         base-4.9.0.0:Data.Type.Equality base-4.9.0.0:Data.Version
                         base-4.9.0.0:Data.Void base-4.9.0.0:GHC.Exts
                         base-4.9.0.0:GHC.Generics base-4.9.0.0:GHC.IO.Exception
                         base-4.9.0.0:GHC.TypeLits
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         dlist-0.8.0.2@dlist-0.8.0.2-GWAMmbX9rLg3tqrbOizHGv:Data.DList
                         ghc-boot-th-8.0.1@ghc-boot-th-8.0.1:GHC.LanguageExtensions.Type
                         iproute-1.7.1@iproute-1.7.1-9hsGfRvggCmFA0ueZi5Sd9:Data.IP.Addr
                         iproute-1.7.1@iproute-1.7.1-9hsGfRvggCmFA0ueZi5Sd9:Data.IP.Range
                         monad-control-1.0.1.0@monad-control-1.0.1.0-HoNEBoNfniX3vjSfkI7WTT:Control.Monad.Trans.Control
                         primitive-0.6.1.0@primitive-0.6.1.0-Ip44DqhfCp21tTUYbecwa:Control.Monad.Primitive
                         resourcet-1.1.8.1@resourcet-1.1.8.1-1XWaZ7RmVde330DM5PRI3Z:Control.Monad.Trans.Resource.Internal
                         scotty-0.11.0@scotty-0.11.0-IYgZL9vvPk2Jcr98uCm7GL:Web.Scotty.Internal.Types
                         tagged-0.8.5@tagged-0.8.5-CtgV6EcN0do8F92i1S6iYx:Data.Tagged
                         template-haskell-2.11.0.0:Language.Haskell.TH.Syntax
                         text-1.2.2.1@text-1.2.2.1-9Yh8rJoh8fO2JMLWffT3Qs:Data.Text
                         text-1.2.2.1@text-1.2.2.1-9Yh8rJoh8fO2JMLWffT3Qs:Data.Text.Lazy
                         unordered-containers-0.2.7.1@unordered-containers-0.2.7.1-9LORRyFpDhM8ZtazbO2Bhp:Data.HashMap.Base
                         unordered-containers-0.2.7.1@unordered-containers-0.2.7.1-9LORRyFpDhM8ZtazbO2Bhp:Data.HashSet
                         vector-0.11.0.0@vector-0.11.0.0-6uB77qGCxR6GPLxI2sqsX3:Data.Vector
                         vector-0.11.0.0@vector-0.11.0.0-6uB77qGCxR6GPLxI2sqsX3:Data.Vector.Primitive
                         vector-0.11.0.0@vector-0.11.0.0-6uB77qGCxR6GPLxI2sqsX3:Data.Vector.Storable
                         vector-0.11.0.0@vector-0.11.0.0-6uB77qGCxR6GPLxI2sqsX3:Data.Vector.Unboxed
                         vector-0.11.0.0@vector-0.11.0.0-6uB77qGCxR6GPLxI2sqsX3:Data.Vector.Unboxed.Base
import  -/  aeson-0.11.2.1@aeson-0.11.2.1-ByXhYhAOjwT2lX0EEzDlEU:Data.Aeson 281d2ab7daf86146b3b59970e2966e2e
import  -/  aeson-0.11.2.1@aeson-0.11.2.1-ByXhYhAOjwT2lX0EEzDlEU:Data.Aeson.Types.Class 1dfffa4ea8ab7684e11894650e17978a
import  -/  base-4.9.0.0:Data.Monoid 1efae021212a10c79fd75960dc0a1d99
import  -/  base-4.9.0.0:GHC.Base 8ed3be81c0707b322f975a84ae1bb816
import  -/  base-4.9.0.0:GHC.Generics 8e2a7658e8b966c1d29d0d5fd4129f38
import  -/  base-4.9.0.0:GHC.List 13d2451194c1c6e53b4f4f07947736dd
import  -/  base-4.9.0.0:GHC.Show 952347a6ab730bcb25c0854d8bc6ca51
import  -/  base-4.9.0.0:Prelude b9bddb97799837fe67a8d00939a5b6c3
import  -/  base-4.9.0.0:System.IO ad985d7a3fc986e9b9c610fb344d9106
import  -/  blaze-html-0.8.1.3@blaze-html-0.8.1.3-7Mt9x337mv4IO4jcUMt8gl:Text.Blaze.Html de8e2e69ec9f68d6a677f78922ac50f5
import  -/  blaze-html-0.8.1.3@blaze-html-0.8.1.3-7Mt9x337mv4IO4jcUMt8gl:Text.Blaze.Html.Renderer.Text 1406cb2f30f9ec08b088950976e1de71
import  -/  blaze-html-0.8.1.3@blaze-html-0.8.1.3-7Mt9x337mv4IO4jcUMt8gl:Text.Blaze.Html5 c65a0be1d14c5665b47172b4b20707cb
import  -/  blaze-html-0.8.1.3@blaze-html-0.8.1.3-7Mt9x337mv4IO4jcUMt8gl:Text.Blaze.Html5.Attributes a8cc82c968807acd854723e11ce8f5cf
import  -/  ghc-prim-0.5.0.0:GHC.Classes 0bdf3d057a415ec1b84a7b1994efbe47
import  -/  ghc-prim-0.5.0.0:GHC.Types 7378e41b7749213c8c88ceb6b0665d4c
import  -/  Views.Index 875dd11d4cfdf84fc67df8957835c5df
  exports: 0632bc611a10bed4a3c5330ed3e7610b
  navbar 8edbdb4ef936abee4bdac9f04737f033
import  -/  scotty-0.11.0@scotty-0.11.0-IYgZL9vvPk2Jcr98uCm7GL:Web.Scotty 0755cf02fd52d47c898ec2be40113eb4
import  -/  time-1.6.0.1@time-1.6.0.1:Data.Time 780e2aecb1fb9ccddcc7e0dc4518a593
import  -/  wai-extra-3.0.19@wai-extra-3.0.19-4v3vPVzprOS42uMv9YoHx1:Network.Wai.Middleware.RequestLogger 3aa1d301eabe4986d1f0e15de85fbcf1
import  -/  wai-middleware-static-0.8.1@wai-middleware-static-0.8.1-18slCMpIGmVIS5lJoasFfN:Network.Wai.Middleware.Static fc0c1dc915adf46ad9f647774edc8ac1
9e8a978cf82e4a17005f04ceaf18964a
  $fFromJSONUser :: Data.Aeson.Types.Class.FromJSON Main.User
  DFunId
  {- Arity: 1, Strictness: <L,U>, Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, True)
                Main.$fFromJSONUser_$cparseJSON
                  `cast`
                (Sym (Data.Aeson.Types.Class.N:FromJSON[0] <Main.User>_N)) -}
fdafc3099e89c4cc4f2f554f9af4037e
  $fFromJSONUser1 ::
    Data.Aeson.Types.Internal.Options
    -> GHC.Base.Maybe Data.Text.Internal.Text
    -> Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Generic.Tagged
         Data.Aeson.Types.Generic.True
         (Data.Aeson.Types.Internal.Parser
            ((GHC.Generics.:*:)
               (GHC.Generics.S1
                  ('GHC.Generics.MetaSel
                     ('GHC.Base.Just "userId")
                     'GHC.Generics.NoSourceUnpackedness
                     'GHC.Generics.NoSourceStrictness
                     'GHC.Generics.DecidedLazy)
                  (GHC.Generics.Rec0 GHC.Types.Int))
               (GHC.Generics.S1
                  ('GHC.Generics.MetaSel
                     ('GHC.Base.Just "userName")
                     'GHC.Generics.NoSourceUnpackedness
                     'GHC.Generics.NoSourceStrictness
                     'GHC.Generics.DecidedLazy)
                  (GHC.Generics.Rec0 GHC.Base.String))
               a))
  {- Arity: 3, Strictness: <L,U(U,U,U,U,U,U)><L,A><S,1*U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, True)
                (\ @ a
                   (w :: Data.Aeson.Types.Internal.Options)
                   (w1 :: GHC.Base.Maybe Data.Text.Internal.Text)
                   (w3 :: Data.Aeson.Types.Internal.Value) ->
                 Main.$w$dConsFromJSON' @ a w w3) -}
3a85fe6f4c3d0194703557c40162a615
  $fFromJSONUser10 ::
    GHC.Generics.R:SingMaybeb
      GHC.Types.Symbol ('GHC.Base.Just "userName")
  {- Unfolding: (GHC.Generics.SJust
                   @ GHC.Types.Symbol
                   @ ('GHC.Base.Just "userName")
                   @ "userName"
                   @~ <'GHC.Base.Just "userName">_N
                   Main.$fFromJSONUser11
                     `cast`
                   (Sym (GHC.Generics.D:R:SingSymbols0[0]) <"userName">_N)) -}
ee76199f90787a03f9c7750b024c6066
  $fFromJSONUser11 :: GHC.Generics.R:SingSymbols "userName"
  {- Strictness: m,
     Unfolding: (GHC.Generics.SSym
                   @ "userName"
                   Main.$fFromJSONUser12
                     `cast`
                   (Trans
                        (Sym (GHC.TypeLits.N:SSymbol[0] <"userName">_P))
                        (Sym (GHC.TypeLits.N:KnownSymbol[0]) <"userName">_N))) -}
512109b2179f9b24f06329eb3084176b
  $fFromJSONUser12 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "userName"#) -}
65ffeddf782f2e7a42e9d3dd43efea78
  $fFromJSONUser13 ::
    (GHC.Generics.:*:)
      (GHC.Generics.M1
         GHC.Generics.S
         ('GHC.Generics.MetaSel
            ('GHC.Base.Just "userId")
            'GHC.Generics.NoSourceUnpackedness
            'GHC.Generics.NoSourceStrictness
            'GHC.Generics.DecidedLazy)
         (GHC.Generics.Rec0 GHC.Types.Int))
      (GHC.Generics.M1
         GHC.Generics.S
         ('GHC.Generics.MetaSel
            ('GHC.Base.Just "userName")
            'GHC.Generics.NoSourceUnpackedness
            'GHC.Generics.NoSourceStrictness
            'GHC.Generics.DecidedLazy)
         (GHC.Generics.Rec0 GHC.Base.String))
      a
    -> GHC.Types.Bool
  {- Arity: 1, HasNoCafRefs, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ @ a
                   (eta :: (GHC.Generics.:*:)
                             (GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "userId")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.Rec0 GHC.Types.Int))
                             (GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "userName")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.Rec0 GHC.Base.String))
                             a) ->
                 GHC.Types.False) -}
aa3d1c2ed8aaf74790839caf726c7e35
  $fFromJSONUser2 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser
         (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int a1)
  {- Arity: 2, Strictness: <L,A><L,1*U>, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, True)
                (\ @ a1
                   (w :: Data.Aeson.Types.Internal.Options)
                   (w1 :: Data.Aeson.Types.Internal.Value) ->
                 Main.$w$dGFromJSON @ a1 w1) -}
0111ae68e0739128e85c14e34ba64771
  $fFromJSONUser3 :: GHC.Generics.SingI ('GHC.Base.Just "userId")
  {- Unfolding: InlineRule (0, True, True)
                Main.$fFromJSONUser4
                  `cast`
                (Trans
                     (Sym (GHC.Generics.D:R:SingMaybeb0[0] <GHC.Types.Symbol>_N))
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Base.Maybe
                                                       GHC.Types.Symbol>_N) <'GHC.Base.Just
                                                                               "userId">_N) -}
6fed35386479254b1137eb20ebee8a1b
  $fFromJSONUser4 ::
    GHC.Generics.R:SingMaybeb
      GHC.Types.Symbol ('GHC.Base.Just "userId")
  {- Unfolding: (GHC.Generics.SJust
                   @ GHC.Types.Symbol
                   @ ('GHC.Base.Just "userId")
                   @ "userId"
                   @~ <'GHC.Base.Just "userId">_N
                   Main.$fFromJSONUser5
                     `cast`
                   (Sym (GHC.Generics.D:R:SingSymbols0[0]) <"userId">_N)) -}
bafc3841847f59fe5537861533846021
  $fFromJSONUser5 :: GHC.Generics.R:SingSymbols "userId"
  {- Strictness: m,
     Unfolding: (GHC.Generics.SSym
                   @ "userId"
                   Main.$fFromJSONUser6
                     `cast`
                   (Trans
                        (Sym (GHC.TypeLits.N:SSymbol[0] <"userId">_P))
                        (Sym (GHC.TypeLits.N:KnownSymbol[0]) <"userId">_N))) -}
8b12d8cd8c02d8c589fd74ad88dfd687
  $fFromJSONUser6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "userId"#) -}
7f92fcd82e7c0d94c6cafab58b9eb312
  $fFromJSONUser7 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser
         (GHC.Generics.K1 GHC.Generics.R [GHC.Types.Char] a1)
  {- Arity: 2, Strictness: <L,A><L,1*U>, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, True)
                (\ @ a1
                   (w :: Data.Aeson.Types.Internal.Options)
                   (w1 :: Data.Aeson.Types.Internal.Value) ->
                 Main.$w$dGFromJSON1 @ a1 w1) -}
5da09166586e2f341071375e955fadbc
  $fFromJSONUser8 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "String"#) -}
62cd7b939c0ac5d89bfe35cd37cef8cc
  $fFromJSONUser9 :: GHC.Generics.SingI ('GHC.Base.Just "userName")
  {- Unfolding: InlineRule (0, True, True)
                Main.$fFromJSONUser10
                  `cast`
                (Trans
                     (Sym (GHC.Generics.D:R:SingMaybeb0[0] <GHC.Types.Symbol>_N))
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Base.Maybe
                                                       GHC.Types.Symbol>_N) <'GHC.Base.Just
                                                                               "userName">_N) -}
9e8a978cf82e4a17005f04ceaf18964a
  $fFromJSONUser_$cparseJSON ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser Main.User
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ (x :: Data.Aeson.Types.Internal.Value) ->
                 let {
                   m :: Data.Aeson.Types.Internal.Parser
                          ((GHC.Generics.:*:)
                             (GHC.Generics.S1
                                ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "userId")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.Rec0 GHC.Types.Int))
                             (GHC.Generics.S1
                                ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "userName")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.Rec0 GHC.Base.String))
                             GHC.Prim.Any)
                   = Data.Aeson.Types.Generic.$fConsFromJSONf_$cconsParseJSON
                       @ (GHC.Generics.S1
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "userId")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.Rec0 GHC.Types.Int)
                          GHC.Generics.:*: GHC.Generics.S1
                                             ('GHC.Generics.MetaSel
                                                ('GHC.Base.Just "userName")
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy)
                                             (GHC.Generics.Rec0 GHC.Base.String))
                       @ Data.Aeson.Types.Generic.True
                       Main.$fFromJSONUser13
                         `cast`
                       (Sym (Data.Aeson.Types.Generic.N:IsRecord[0]
                                 <GHC.Generics.M1
                                    GHC.Generics.S
                                    ('GHC.Generics.MetaSel
                                       ('GHC.Base.Just "userId")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy)
                                    (GHC.Generics.Rec0 GHC.Types.Int)
                                  GHC.Generics.:*: GHC.Generics.M1
                                                     GHC.Generics.S
                                                     ('GHC.Generics.MetaSel
                                                        ('GHC.Base.Just "userName")
                                                        'GHC.Generics.NoSourceUnpackedness
                                                        'GHC.Generics.NoSourceStrictness
                                                        'GHC.Generics.DecidedLazy)
                                                     (GHC.Generics.Rec0 GHC.Base.String)>_N
                                 <Data.Aeson.Types.Generic.True>_N))
                       Main.$fFromJSONUser1
                         `cast`
                       (Sym (Data.Aeson.Types.Generic.N:ConsFromJSON'[0]
                                 <GHC.Generics.S1
                                    ('GHC.Generics.MetaSel
                                       ('GHC.Base.Just "userId")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy)
                                    (GHC.Generics.Rec0 GHC.Types.Int)
                                  GHC.Generics.:*: GHC.Generics.S1
                                                     ('GHC.Generics.MetaSel
                                                        ('GHC.Base.Just "userName")
                                                        'GHC.Generics.NoSourceUnpackedness
                                                        'GHC.Generics.NoSourceStrictness
                                                        'GHC.Generics.DecidedLazy)
                                                     (GHC.Generics.Rec0 GHC.Base.String)>_N
                                 <Data.Aeson.Types.Generic.True>_N))
                       @ GHC.Prim.Any
                       Data.Aeson.Types.Internal.defaultOptions
                       x
                 } in
                 (\ @ (f1 :: * -> *)
                    @ r
                    (path :: Data.Aeson.Types.Internal.JSONPath)
                    (kf :: Data.Aeson.Types.Internal.Failure f1 r)
                    (ks :: Data.Aeson.Types.Internal.Success Main.User f1 r) ->
                  m `cast`
                  (Data.Aeson.Types.Internal.N:Parser[0]
                       <(GHC.Generics.:*:)
                          (GHC.Generics.S1
                             ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "userId")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy)
                             (GHC.Generics.Rec0 GHC.Types.Int))
                          (GHC.Generics.S1
                             ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "userName")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy)
                             (GHC.Generics.Rec0 GHC.Base.String))
                          GHC.Prim.Any>_R)
                    @ f1
                    @ r
                    path
                    kf
                    (\ (a2 :: (GHC.Generics.:*:)
                                (GHC.Generics.S1
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "userId")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 GHC.Types.Int))
                                (GHC.Generics.S1
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "userName")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 GHC.Base.String))
                                GHC.Prim.Any) ->
                     ks
                       (case a2 of wild { GHC.Generics.:*: ds ds1 ->
                        Main.User
                          ds
                            `cast`
                          (Trans
                               (GHC.Generics.N:M1[0]
                                    <GHC.Generics.S>_P
                                    <'GHC.Generics.MetaSel
                                       ('GHC.Base.Just "userId")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy>_P
                                    <GHC.Generics.K1
                                       GHC.Generics.R GHC.Types.Int>_R <GHC.Prim.Any>_N)
                               (GHC.Generics.N:K1[0]
                                    <GHC.Generics.R>_P <GHC.Types.Int>_R <GHC.Prim.Any>_P))
                          ds1
                            `cast`
                          (Trans
                               (GHC.Generics.N:M1[0]
                                    <GHC.Generics.S>_P
                                    <'GHC.Generics.MetaSel
                                       ('GHC.Base.Just "userName")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy>_P
                                    <GHC.Generics.K1
                                       GHC.Generics.R GHC.Base.String>_R <GHC.Prim.Any>_N)
                               (GHC.Generics.N:K1[0]
                                    <GHC.Generics.R>_P <GHC.Base.String>_R <GHC.Prim.Any>_P)) })))
                   `cast`
                 (Sym (Data.Aeson.Types.Internal.N:Parser[0] <Main.User>_R))) -}
193db53462b5f6f1adfd0ce748cde242
  $fFromJSONUser_$s$fSelectorMetaMetaSel ::
    GHC.Generics.Selector
      ('GHC.Generics.MetaSel
         ('GHC.Base.Just "userId")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Generics.Meta
                  @ ('GHC.Generics.MetaSel
                       ('GHC.Base.Just "userId")
                       'GHC.Generics.NoSourceUnpackedness
                       'GHC.Generics.NoSourceStrictness
                       'GHC.Generics.DecidedLazy)
                  Main.$fFromJSONUser_$s$fSelectorMetaMetaSel_$cselName
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselSourceUnpackedness
                     @ ('GHC.Base.Just "userId")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     Main.$fFromJSONUser3
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N))
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselSourceStrictness
                     @ ('GHC.Base.Just "userId")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     Main.$fFromJSONUser3
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N))
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselDecidedStrictness
                     @ ('GHC.Base.Just "userId")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     Main.$fFromJSONUser3
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N)) -}
82ef3dd36c4aa0d84eaf3622a36f9623
  $fFromJSONUser_$s$fSelectorMetaMetaSel1 ::
    GHC.Generics.Selector
      ('GHC.Generics.MetaSel
         ('GHC.Base.Just "userName")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Generics.Meta
                  @ ('GHC.Generics.MetaSel
                       ('GHC.Base.Just "userName")
                       'GHC.Generics.NoSourceUnpackedness
                       'GHC.Generics.NoSourceStrictness
                       'GHC.Generics.DecidedLazy)
                  Main.$fFromJSONUser_$s$fSelectorMetaMetaSel_$cselName1
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselSourceUnpackedness
                     @ ('GHC.Base.Just "userName")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     Main.$fFromJSONUser9
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N))
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselSourceStrictness
                     @ ('GHC.Base.Just "userName")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     Main.$fFromJSONUser9
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N))
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselDecidedStrictness
                     @ ('GHC.Base.Just "userName")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     Main.$fFromJSONUser9
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N)) -}
440f27ea269dc8a9aae0c825cf0f0c63
  $fFromJSONUser_$s$fSelectorMetaMetaSel_$cselName ::
    forall k (t :: GHC.Generics.Meta
                   -> (GHC.Types.* -> GHC.Types.*) -> k -> *) (f :: GHC.Types.*
                                                                    -> GHC.Types.*) (a :: k).
    t ('GHC.Generics.MetaSel
         ('GHC.Base.Just "userId")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy) f a
    -> [GHC.Types.Char]
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ @ k
                   @ (t :: GHC.Generics.Meta
                           -> (GHC.Types.* -> GHC.Types.*) -> k -> *)
                   @ (f :: GHC.Types.* -> GHC.Types.*)
                   @ (a :: k)
                   (ds1 :: t ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "userId")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy) f a) ->
                 Main.$fFromJSONUser6) -}
cbe645e35a1254dbdf6c0a46ffc49926
  $fFromJSONUser_$s$fSelectorMetaMetaSel_$cselName1 ::
    forall k (t :: GHC.Generics.Meta
                   -> (GHC.Types.* -> GHC.Types.*) -> k -> *) (f :: GHC.Types.*
                                                                    -> GHC.Types.*) (a :: k).
    t ('GHC.Generics.MetaSel
         ('GHC.Base.Just "userName")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy) f a
    -> [GHC.Types.Char]
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ @ k
                   @ (t :: GHC.Generics.Meta
                           -> (GHC.Types.* -> GHC.Types.*) -> k -> *)
                   @ (f :: GHC.Types.* -> GHC.Types.*)
                   @ (a :: k)
                   (ds1 :: t ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "userName")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy) f a) ->
                 Main.$fFromJSONUser12) -}
9e8a978cf82e4a17005f04ceaf18964a
  $fGenericUser :: GHC.Generics.Generic Main.User
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Main.User Main.$fGenericUser_$cfrom Main.$fGenericUser_$cto -}
9e8a978cf82e4a17005f04ceaf18964a
  $fGenericUser_$cfrom :: Main.User -> GHC.Generics.Rep Main.User x
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U,U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ x (ds :: Main.User) ->
                 case ds of wild { Main.User g1 g2 ->
                 (GHC.Generics.:*:
                    @ (GHC.Generics.M1
                         GHC.Generics.S
                         ('GHC.Generics.MetaSel
                            ('GHC.Base.Just "userId")
                            'GHC.Generics.NoSourceUnpackedness
                            'GHC.Generics.NoSourceStrictness
                            'GHC.Generics.DecidedLazy)
                         (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int))
                    @ (GHC.Generics.M1
                         GHC.Generics.S
                         ('GHC.Generics.MetaSel
                            ('GHC.Base.Just "userName")
                            'GHC.Generics.NoSourceUnpackedness
                            'GHC.Generics.NoSourceStrictness
                            'GHC.Generics.DecidedLazy)
                         (GHC.Generics.K1 GHC.Generics.R GHC.Base.String))
                    @ x
                    g1
                      `cast`
                    (Trans
                         (Sym (GHC.Generics.N:K1[0]
                                   <GHC.Generics.R>_P <GHC.Types.Int>_R <x>_P))
                         (Sym (GHC.Generics.N:M1[0]
                                   <GHC.Generics.S>_P
                                   <'GHC.Generics.MetaSel
                                      ('GHC.Base.Just "userId")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy>_P
                                   <GHC.Generics.K1 GHC.Generics.R GHC.Types.Int>_R) <x>_N))
                    g2
                      `cast`
                    (Trans
                         (Sym (GHC.Generics.N:K1[0]
                                   <GHC.Generics.R>_P <GHC.Base.String>_R <x>_P))
                         (Sym (GHC.Generics.N:M1[0]
                                   <GHC.Generics.S>_P
                                   <'GHC.Generics.MetaSel
                                      ('GHC.Base.Just "userName")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy>_P
                                   <GHC.Generics.K1 GHC.Generics.R GHC.Base.String>_R) <x>_N)))
                   `cast`
                 (Trans
                      (Sym (GHC.Generics.N:M1[0]
                                <GHC.Generics.C>_P
                                <'GHC.Generics.MetaCons
                                   "User" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                                <GHC.Generics.M1
                                   GHC.Generics.S
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "userId")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int)
                                 GHC.Generics.:*: GHC.Generics.M1
                                                    GHC.Generics.S
                                                    ('GHC.Generics.MetaSel
                                                       ('GHC.Base.Just "userName")
                                                       'GHC.Generics.NoSourceUnpackedness
                                                       'GHC.Generics.NoSourceStrictness
                                                       'GHC.Generics.DecidedLazy)
                                                    (GHC.Generics.K1
                                                       GHC.Generics.R GHC.Base.String)>_R))
                      (Trans
                           (Sym (GHC.Generics.N:M1[0]
                                     <GHC.Generics.D>_P
                                     <'GHC.Generics.MetaData
                                        "User" "Main" "main" 'GHC.Types.False>_P
                                     <GHC.Generics.M1
                                        GHC.Generics.C
                                        ('GHC.Generics.MetaCons
                                           "User" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                        (GHC.Generics.M1
                                           GHC.Generics.S
                                           ('GHC.Generics.MetaSel
                                              ('GHC.Base.Just "userId")
                                              'GHC.Generics.NoSourceUnpackedness
                                              'GHC.Generics.NoSourceStrictness
                                              'GHC.Generics.DecidedLazy)
                                           (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int)
                                         GHC.Generics.:*: GHC.Generics.M1
                                                            GHC.Generics.S
                                                            ('GHC.Generics.MetaSel
                                                               ('GHC.Base.Just "userName")
                                                               'GHC.Generics.NoSourceUnpackedness
                                                               'GHC.Generics.NoSourceStrictness
                                                               'GHC.Generics.DecidedLazy)
                                                            (GHC.Generics.K1
                                                               GHC.Generics.R GHC.Base.String))>_R))
                           (Sub (Sym (Main.Rep_User[0])))) <x>_N) }) -}
9e8a978cf82e4a17005f04ceaf18964a
  $fGenericUser_$cto :: GHC.Generics.Rep Main.User x -> Main.User
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U,U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ x (ds :: GHC.Generics.Rep Main.User x) ->
                 case ds
                        `cast`
                      (Trans
                           (Sub (Main.Rep_User[0]))
                           (Trans
                                (GHC.Generics.N:M1[0]
                                     <GHC.Generics.D>_P
                                     <'GHC.Generics.MetaData
                                        "User" "Main" "main" 'GHC.Types.False>_P
                                     <GHC.Generics.M1
                                        GHC.Generics.C
                                        ('GHC.Generics.MetaCons
                                           "User" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                        (GHC.Generics.M1
                                           GHC.Generics.S
                                           ('GHC.Generics.MetaSel
                                              ('GHC.Base.Just "userId")
                                              'GHC.Generics.NoSourceUnpackedness
                                              'GHC.Generics.NoSourceStrictness
                                              'GHC.Generics.DecidedLazy)
                                           (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int)
                                         GHC.Generics.:*: GHC.Generics.M1
                                                            GHC.Generics.S
                                                            ('GHC.Generics.MetaSel
                                                               ('GHC.Base.Just "userName")
                                                               'GHC.Generics.NoSourceUnpackedness
                                                               'GHC.Generics.NoSourceStrictness
                                                               'GHC.Generics.DecidedLazy)
                                                            (GHC.Generics.K1
                                                               GHC.Generics.R GHC.Base.String))>_R)
                                (GHC.Generics.N:M1[0]
                                     <GHC.Generics.C>_P
                                     <'GHC.Generics.MetaCons
                                        "User" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                                     <GHC.Generics.M1
                                        GHC.Generics.S
                                        ('GHC.Generics.MetaSel
                                           ('GHC.Base.Just "userId")
                                           'GHC.Generics.NoSourceUnpackedness
                                           'GHC.Generics.NoSourceStrictness
                                           'GHC.Generics.DecidedLazy)
                                        (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int)
                                      GHC.Generics.:*: GHC.Generics.M1
                                                         GHC.Generics.S
                                                         ('GHC.Generics.MetaSel
                                                            ('GHC.Base.Just "userName")
                                                            'GHC.Generics.NoSourceUnpackedness
                                                            'GHC.Generics.NoSourceStrictness
                                                            'GHC.Generics.DecidedLazy)
                                                         (GHC.Generics.K1
                                                            GHC.Generics.R
                                                            GHC.Base.String)>_R)) <x>_N) of wild { GHC.Generics.:*: ds1 ds2 ->
                 Main.User
                   ds1
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "userId")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R GHC.Types.Int>_R <x>_N)
                        (GHC.Generics.N:K1[0] <GHC.Generics.R>_P <GHC.Types.Int>_R <x>_P))
                   ds2
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "userName")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R GHC.Base.String>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <GHC.Generics.R>_P <GHC.Base.String>_R <x>_P)) }) -}
9e8a978cf82e4a17005f04ceaf18964a
  $fShowUser :: GHC.Show.Show Main.User
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Main.User
                  Main.$fShowUser_$cshowsPrec
                  Main.$fShowUser_$cshow
                  Main.$fShowUser_$cshowList -}
9e8a978cf82e4a17005f04ceaf18964a
  $fShowUser1 :: Main.User -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (\ (w :: Main.User) (w1 :: GHC.Base.String) ->
                 case w of ww { Main.User ww1 ww2 ->
                 Main.$w$cshowsPrec 0# ww1 ww2 w1 }) -}
04bf3d6961b11c1d19af7b8328b5d22e
  $fShowUser2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "User {"#) -}
e1a8ea8db25e37b871f4b25ea91dba77
  $fShowUser3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "}"#) -}
80c637b9a22c474439cb4d2c9e7837ee
  $fShowUser4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "userName = "#) -}
dc3a83574a0ba463d78a8e0383120220
  $fShowUser5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# ", "#) -}
83b6d7c7a3a225b984f65b62c43851ac
  $fShowUser6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "userId = "#) -}
9e8a978cf82e4a17005f04ceaf18964a
  $fShowUser_$cshow :: Main.User -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(1*U(U),1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Main.User) ->
                 Main.$fShowUser_$cshowsPrec
                   GHC.Show.shows22
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
9e8a978cf82e4a17005f04ceaf18964a
  $fShowUser_$cshowList :: [Main.User] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__ @ Main.User Main.$fShowUser1) -}
9e8a978cf82e4a17005f04ceaf18964a
  $fShowUser_$cshowsPrec ::
    GHC.Types.Int -> Main.User -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <S(S),1*U(U)><S,1*U(1*U(U),1*U)><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: Main.User)
                   (w3 :: GHC.Base.String) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { Main.User ww3 ww4 ->
                 Main.$w$cshowsPrec ww1 ww3 ww4 w3 } }) -}
9e8a978cf82e4a17005f04ceaf18964a
  $fToJSONUser :: Data.Aeson.Types.Class.ToJSON Main.User
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Main.User
                  Main.$fToJSONUser_$ctoJSON
                  Main.$fToJSONUser_$ctoEncoding -}
9e8a978cf82e4a17005f04ceaf18964a
  $fToJSONUser1 ::
    Main.User
    -> Data.Aeson.Types.Generic.Tagged
         Data.Aeson.Types.Generic.True Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U(1*U(U),1*U)>m1, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Main.User) ->
                 case w of ww { Main.User ww1 ww2 ->
                 case Main.$w$ctoJSON ww1 ww2 of ww3 { Unit# ww4 ->
                 (Data.Aeson.Types.Internal.Object ww4)
                   `cast`
                 (Sym (Data.Aeson.Types.Generic.N:Tagged[0]
                           <Data.Aeson.Types.Generic.True>_P
                           <Data.Aeson.Types.Internal.Value>_R)) } }) -}
0c6e6cd547a59f75ff00f86e94c7d657
  $fToJSONUser2 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 4#) -}
4477c3b868b9413c8486e0b455c8aeff
  $fToJSONUser3 :: Data.Text.Internal.Text
  {- Unfolding: (case GHC.Magic.runRW#
                        @ 'GHC.Types.PtrRepLifted
                        @ Data.Text.Internal.Text
                        Main.$fToJSONUser4 of ds7 { (#,#) ipv ipv1 ->
                 ipv1 }) -}
48840dde7a0c2a5cee2dc33deec4d2c4
  $fToJSONUser4 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 1,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newByteArray#
                        @ GHC.Prim.RealWorld
                        8#
                        s1 of ds7 { (#,#) ipv ipv1 ->
                 Data.Aeson.Types.Generic.$wouter6
                   (Data.Text.Array.MArray @ GHC.Prim.RealWorld ipv1)
                   Data.Aeson.Types.Generic.$fFromPairM2
                   Main.$fFromJSONUser12
                   0#
                   ipv }) -}
27130e67d003d7f307287939b5694390
  $fToJSONUser5 :: Data.Text.Internal.Text
  {- Unfolding: (case GHC.Magic.runRW#
                        @ 'GHC.Types.PtrRepLifted
                        @ Data.Text.Internal.Text
                        Main.$fToJSONUser6 of ds7 { (#,#) ipv ipv1 ->
                 ipv1 }) -}
62210d1df453f8b32f87811b150b894e
  $fToJSONUser6 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 1,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newByteArray#
                        @ GHC.Prim.RealWorld
                        8#
                        s1 of ds7 { (#,#) ipv ipv1 ->
                 Data.Aeson.Types.Generic.$wouter6
                   (Data.Text.Array.MArray @ GHC.Prim.RealWorld ipv1)
                   Data.Aeson.Types.Generic.$fFromPairM2
                   Main.$fFromJSONUser6
                   0#
                   ipv }) -}
9e8a978cf82e4a17005f04ceaf18964a
  $fToJSONUser_$ctoEncoding ::
    Main.User -> Data.Aeson.Types.Internal.Encoding
  {- Arity: 1, Strictness: <S,1*U(1*U(U),1*U)>,
     Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (eta :: Main.User) ->
                 Data.Aeson.Encode.Builder.encodeToBuilder
                   (Main.$fToJSONUser_$ctoJSON eta))
                  `cast`
                (<Main.User>_R
                 ->_R Sym (Data.Aeson.Types.Internal.N:Encoding[0])) -}
9e8a978cf82e4a17005f04ceaf18964a
  $fToJSONUser_$ctoJSON ::
    Main.User -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U(1*U(U),1*U)>m1,
     Unfolding: InlineRule (0, True, True)
                Main.$fToJSONUser1
                  `cast`
                (<Main.User>_R
                 ->_R Data.Aeson.Types.Generic.N:Tagged[0]
                          <Data.Aeson.Types.Generic.True>_P
                          <Data.Aeson.Types.Internal.Value>_R) -}
3c4d0464c4875f19b7fb5509338e7f66
  $s$fToJSON[] :: Data.Aeson.Types.Class.ToJSON [Main.User]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ [Main.User]
                  (\ (eta :: [Main.User]) ->
                   case Data.Vector.Generic.new
                          @ Data.Vector.Vector
                          @ Data.Aeson.Types.Internal.Value
                          (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                          (Data.Vector.Generic.New.unstream
                             @ Data.Vector.Vector
                             @ Data.Aeson.Types.Internal.Value
                             (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                             (Data.Vector.Fusion.Bundle.Monadic.unsafeFromList
                                @ Data.Vector.Fusion.Util.Id
                                @ Data.Aeson.Types.Internal.Value
                                @ Data.Vector.Vector
                                Data.Vector.Fusion.Util.$fMonadId
                                Data.Vector.Fusion.Bundle.Size.Unknown
                                (GHC.Base.build
                                   @ Data.Aeson.Types.Internal.Value
                                   (\ @ b1
                                      (c :: Data.Aeson.Types.Internal.Value -> b1 -> b1)[OneShot]
                                      (n :: b1)[OneShot] ->
                                    GHC.Base.foldr
                                      @ Main.User
                                      @ b1
                                      (GHC.Base.mapFB
                                         @ Data.Aeson.Types.Internal.Value
                                         @ b1
                                         @ Main.User
                                         c
                                         Main.$fToJSONUser_$ctoJSON)
                                      n
                                      eta)))) of dt { Data.Vector.Vector ipv ipv1 ipv2 ->
                   Data.Aeson.Types.Internal.Array dt })
                  (Data.Aeson.Types.Instances.$fToJSON[]_$ctoEncoding
                     @ Main.User
                     Main.$fToJSONUser) -}
cf21eebefbba4d6af162ff86914e3a11
  $tc'User :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3398051356673441841##
                   13421728234541805440##
                   Main.$trModule
                   Main.$tc'User1) -}
048f6897aa6ff8183e515c598de191a7
  $tc'User1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'User"#) -}
45bc40711479749f25cb097885d72de9
  $tcUser :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8072041860742076866##
                   8858956647680378335##
                   Main.$trModule
                   Main.$tcUser1) -}
a84f013004a37a979358c3944a61d996
  $tcUser1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "User"#) -}
d6831ef04cb9301b090dfae6f7bb7ec7
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Main.$trModule2 Main.$trModule1) -}
847d9fc3b8e6f0b424199f36b4999bb2
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Main"#) -}
24ef6042833e75ffd7aa98b83ecca98d
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "main"#) -}
a95bc5ebe3b3bb413a60d44e9b45ee79
  $w$cshowsPrec ::
    GHC.Prim.Int#
    -> GHC.Types.Int
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
  {- Arity: 4, Strictness: <S,U><L,1*U(U)><L,1*U><L,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: GHC.Types.Int)
                   (ww2 :: GHC.Base.String)
                   (w :: GHC.Base.String) ->
                 let {
                   g :: GHC.Base.String -> GHC.Base.String
                     {- Arity: 1, Strictness: <L,1*U> -}
                   = \ (x :: GHC.Base.String)[OneShot] ->
                     GHC.Base.++
                       @ GHC.Types.Char
                       Main.$fShowUser6
                       (case ww1 of ww3 { GHC.Types.I# ww4 ->
                        case GHC.Show.$wshowSignedInt
                               0#
                               ww4
                               (GHC.Base.++
                                  @ GHC.Types.Char
                                  Main.$fShowUser5
                                  (GHC.Base.++
                                     @ GHC.Types.Char
                                     Main.$fShowUser4
                                     (GHC.Types.:
                                        @ GHC.Types.Char
                                        GHC.Show.shows8
                                        (GHC.Show.showLitString
                                           ww2
                                           (GHC.Types.:
                                              @ GHC.Types.Char
                                              GHC.Show.shows8
                                              (GHC.Base.++
                                                 @ GHC.Types.Char
                                                 Main.$fShowUser3
                                                 x)))))) of ww5 { (#,#) ww6 ww7 ->
                        GHC.Types.: @ GHC.Types.Char ww6 ww7 } })
                 } in
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# ww 11#) of wild {
                   GHC.Types.False
                   -> GHC.Base.++ @ GHC.Types.Char Main.$fShowUser2 (g w)
                   GHC.Types.True
                   -> GHC.Types.:
                        @ GHC.Types.Char
                        GHC.Show.shows9
                        (GHC.Base.++
                           @ GHC.Types.Char
                           Main.$fShowUser2
                           (g (GHC.Types.: @ GHC.Types.Char GHC.Show.shows6 w))) }) -}
0dd4c9e91593b2b70f4643c2714f3871
  $w$ctoJSON ::
    GHC.Types.Int
    -> GHC.Base.String -> (# Data.Aeson.Types.Internal.Object #)
  {- Arity: 2, Strictness: <L,1*U(U)><L,1*U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Types.Int) (ww1 :: GHC.Base.String) ->
                 case Data.Aeson.Types.Internal.$sfromList1
                        @ Data.Aeson.Types.Internal.Value
                        (GHC.Types.:
                           @ (Data.Text.Internal.Text, Data.Aeson.Types.Internal.Value)
                           (Main.$fToJSONUser5,
                            case ww of wild { GHC.Types.I# i ->
                            case GHC.Integer.Type.smallInteger i of dt { DEFAULT ->
                            Data.Aeson.Types.Internal.Number
                              (Data.Scientific.Scientific dt 0#) } })
                           (GHC.Types.:
                              @ (Data.Text.Internal.Text, Data.Aeson.Types.Internal.Value)
                              (Main.$fToJSONUser3,
                               case Main.$w$dGToJSON
                                      @ GHC.Prim.Any
                                      ww1
                                        `cast`
                                      (Sym (GHC.Generics.N:K1[0]
                                                <GHC.Generics.R>_P
                                                <GHC.Base.String>_R
                                                <GHC.Prim.Any>_P)) of ww2 { Unit# ww3 ->
                               Data.Aeson.Types.Internal.String ww3 })
                              (GHC.Types.[] @ Data.Aeson.Types.Internal.Pair)))
                        (Data.HashMap.Base.Empty
                           @ Data.Text.Internal.Text
                           @ Data.Aeson.Types.Internal.Value) of dt { DEFAULT ->
                 (# dt #) }) -}
fad3c3332db89959e433f8e5b070cfe2
  $w$dConsFromJSON' ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Generic.Tagged
         Data.Aeson.Types.Generic.True
         (Data.Aeson.Types.Internal.Parser
            ((GHC.Generics.:*:)
               (GHC.Generics.S1
                  ('GHC.Generics.MetaSel
                     ('GHC.Base.Just "userId")
                     'GHC.Generics.NoSourceUnpackedness
                     'GHC.Generics.NoSourceStrictness
                     'GHC.Generics.DecidedLazy)
                  (GHC.Generics.Rec0 GHC.Types.Int))
               (GHC.Generics.S1
                  ('GHC.Generics.MetaSel
                     ('GHC.Base.Just "userName")
                     'GHC.Generics.NoSourceUnpackedness
                     'GHC.Generics.NoSourceStrictness
                     'GHC.Generics.DecidedLazy)
                  (GHC.Generics.Rec0 GHC.Base.String))
               a))
  {- Arity: 2, Strictness: <L,U(U,U,U,U,U,U)><S,1*U>, Inline: [0],
     Unfolding: (\ @ a
                   (w :: Data.Aeson.Types.Internal.Options)
                   (w1 :: Data.Aeson.Types.Internal.Value) ->
                 case w1 of wild {
                   DEFAULT
                   -> (Data.Aeson.Types.Class.typeMismatch
                         @ ((GHC.Generics.:*:)
                              (GHC.Generics.S1
                                 ('GHC.Generics.MetaSel
                                    ('GHC.Base.Just "userId")
                                    'GHC.Generics.NoSourceUnpackedness
                                    'GHC.Generics.NoSourceStrictness
                                    'GHC.Generics.DecidedLazy)
                                 (GHC.Generics.Rec0 GHC.Types.Int))
                              (GHC.Generics.S1
                                 ('GHC.Generics.MetaSel
                                    ('GHC.Base.Just "userName")
                                    'GHC.Generics.NoSourceUnpackedness
                                    'GHC.Generics.NoSourceStrictness
                                    'GHC.Generics.DecidedLazy)
                                 (GHC.Generics.Rec0 GHC.Base.String))
                              a)
                         Data.Aeson.Types.Generic.$fConsFromJSON'fTrue1
                         wild)
                        `cast`
                      (Sym (Data.Aeson.Types.Generic.N:Tagged[0]
                                <Data.Aeson.Types.Generic.True>_P
                                <Data.Aeson.Types.Internal.Parser
                                   ((GHC.Generics.:*:)
                                      (GHC.Generics.S1
                                         ('GHC.Generics.MetaSel
                                            ('GHC.Base.Just "userId")
                                            'GHC.Generics.NoSourceUnpackedness
                                            'GHC.Generics.NoSourceStrictness
                                            'GHC.Generics.DecidedLazy)
                                         (GHC.Generics.Rec0 GHC.Types.Int))
                                      (GHC.Generics.S1
                                         ('GHC.Generics.MetaSel
                                            ('GHC.Base.Just "userName")
                                            'GHC.Generics.NoSourceUnpackedness
                                            'GHC.Generics.NoSourceStrictness
                                            'GHC.Generics.DecidedLazy)
                                         (GHC.Generics.Rec0 GHC.Base.String))
                                      a)>_R))
                   Data.Aeson.Types.Internal.Object obj
                   -> let {
                        e :: Data.Aeson.Types.Internal.Parser
                               (GHC.Generics.M1
                                  GHC.Generics.S
                                  ('GHC.Generics.MetaSel
                                     ('GHC.Base.Just "userName")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                  (GHC.Generics.Rec0 GHC.Base.String)
                                  a)
                        = Data.Aeson.Types.Generic.$fFromRecordM10_$cparseRecord
                            @ ('GHC.Generics.MetaSel
                                 ('GHC.Base.Just "userName")
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.NoSourceStrictness
                                 'GHC.Generics.DecidedLazy)
                            @ (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)
                            Main.$fFromJSONUser_$s$fSelectorMetaMetaSel1
                            Main.$fFromJSONUser7
                              `cast`
                            (Sym (Data.Aeson.Types.Class.N:GFromJSON[0]
                                      <GHC.Generics.K1 GHC.Generics.R [GHC.Types.Char]>_N))
                            @ a
                            w
                            (GHC.Base.Nothing @ Data.Text.Internal.Text)
                            obj
                      } in
                      let {
                        m :: Data.Aeson.Types.Internal.Parser
                               (GHC.Generics.M1
                                  GHC.Generics.S
                                  ('GHC.Generics.MetaSel
                                     ('GHC.Base.Just "userId")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                  (GHC.Generics.Rec0 GHC.Types.Int)
                                  a)
                        = Data.Aeson.Types.Generic.$fFromRecordM10_$cparseRecord
                            @ ('GHC.Generics.MetaSel
                                 ('GHC.Base.Just "userId")
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.NoSourceStrictness
                                 'GHC.Generics.DecidedLazy)
                            @ (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int)
                            Main.$fFromJSONUser_$s$fSelectorMetaMetaSel
                            Main.$fFromJSONUser2
                              `cast`
                            (Sym (Data.Aeson.Types.Class.N:GFromJSON[0]
                                      <GHC.Generics.K1 GHC.Generics.R GHC.Types.Int>_N))
                            @ a
                            w
                            (GHC.Base.Nothing @ Data.Text.Internal.Text)
                            obj
                      } in
                      (\ @ (f :: * -> *)
                         @ r
                         (path :: Data.Aeson.Types.Internal.JSONPath)
                         (kf :: Data.Aeson.Types.Internal.Failure f r)
                         (ks :: Data.Aeson.Types.Internal.Success
                                  ((GHC.Generics.:*:)
                                     (GHC.Generics.M1
                                        GHC.Generics.S
                                        ('GHC.Generics.MetaSel
                                           ('GHC.Base.Just "userId")
                                           'GHC.Generics.NoSourceUnpackedness
                                           'GHC.Generics.NoSourceStrictness
                                           'GHC.Generics.DecidedLazy)
                                        (GHC.Generics.Rec0 GHC.Types.Int))
                                     (GHC.Generics.M1
                                        GHC.Generics.S
                                        ('GHC.Generics.MetaSel
                                           ('GHC.Base.Just "userName")
                                           'GHC.Generics.NoSourceUnpackedness
                                           'GHC.Generics.NoSourceStrictness
                                           'GHC.Generics.DecidedLazy)
                                        (GHC.Generics.Rec0 GHC.Base.String))
                                     a)
                                  f
                                  r) ->
                       m `cast`
                       (Data.Aeson.Types.Internal.N:Parser[0]
                            <GHC.Generics.M1
                               GHC.Generics.S
                               ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "userId")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy)
                               (GHC.Generics.Rec0 GHC.Types.Int)
                               a>_R)
                         @ f
                         @ r
                         path
                         kf
                         (\ (a2 :: GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "userId")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.Rec0 GHC.Types.Int)
                                     a) ->
                          e `cast`
                          (Data.Aeson.Types.Internal.N:Parser[0]
                               <GHC.Generics.M1
                                  GHC.Generics.S
                                  ('GHC.Generics.MetaSel
                                     ('GHC.Base.Just "userName")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                  (GHC.Generics.Rec0 GHC.Base.String)
                                  a>_R)
                            @ f
                            @ r
                            path
                            kf
                            (\ (a3 :: GHC.Generics.M1
                                        GHC.Generics.S
                                        ('GHC.Generics.MetaSel
                                           ('GHC.Base.Just "userName")
                                           'GHC.Generics.NoSourceUnpackedness
                                           'GHC.Generics.NoSourceStrictness
                                           'GHC.Generics.DecidedLazy)
                                        (GHC.Generics.Rec0 GHC.Base.String)
                                        a) ->
                             ks
                               (GHC.Generics.:*:
                                  @ (GHC.Generics.M1
                                       GHC.Generics.S
                                       ('GHC.Generics.MetaSel
                                          ('GHC.Base.Just "userId")
                                          'GHC.Generics.NoSourceUnpackedness
                                          'GHC.Generics.NoSourceStrictness
                                          'GHC.Generics.DecidedLazy)
                                       (GHC.Generics.Rec0 GHC.Types.Int))
                                  @ (GHC.Generics.M1
                                       GHC.Generics.S
                                       ('GHC.Generics.MetaSel
                                          ('GHC.Base.Just "userName")
                                          'GHC.Generics.NoSourceUnpackedness
                                          'GHC.Generics.NoSourceStrictness
                                          'GHC.Generics.DecidedLazy)
                                       (GHC.Generics.Rec0 GHC.Base.String))
                                  @ a
                                  a2
                                  a3))))
                        `cast`
                      (Trans
                           (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                     <(GHC.Generics.:*:)
                                        (GHC.Generics.M1
                                           GHC.Generics.S
                                           ('GHC.Generics.MetaSel
                                              ('GHC.Base.Just "userId")
                                              'GHC.Generics.NoSourceUnpackedness
                                              'GHC.Generics.NoSourceStrictness
                                              'GHC.Generics.DecidedLazy)
                                           (GHC.Generics.Rec0 GHC.Types.Int))
                                        (GHC.Generics.M1
                                           GHC.Generics.S
                                           ('GHC.Generics.MetaSel
                                              ('GHC.Base.Just "userName")
                                              'GHC.Generics.NoSourceUnpackedness
                                              'GHC.Generics.NoSourceStrictness
                                              'GHC.Generics.DecidedLazy)
                                           (GHC.Generics.Rec0 GHC.Base.String))
                                        a>_R))
                           (Sym (Data.Aeson.Types.Generic.N:Tagged[0]
                                     <Data.Aeson.Types.Generic.True>_P
                                     <Data.Aeson.Types.Internal.Parser
                                        ((GHC.Generics.:*:)
                                           (GHC.Generics.S1
                                              ('GHC.Generics.MetaSel
                                                 ('GHC.Base.Just "userId")
                                                 'GHC.Generics.NoSourceUnpackedness
                                                 'GHC.Generics.NoSourceStrictness
                                                 'GHC.Generics.DecidedLazy)
                                              (GHC.Generics.Rec0 GHC.Types.Int))
                                           (GHC.Generics.S1
                                              ('GHC.Generics.MetaSel
                                                 ('GHC.Base.Just "userName")
                                                 'GHC.Generics.NoSourceUnpackedness
                                                 'GHC.Generics.NoSourceStrictness
                                                 'GHC.Generics.DecidedLazy)
                                              (GHC.Generics.Rec0 GHC.Base.String))
                                           a)>_R))) }) -}
46fda9b6e211dedd80b5c62f4e3324c8
  $w$dGFromJSON ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser
         (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int a1)
  {- Arity: 1, Strictness: <L,1*U>, Inline: [0] -}
2d2ae26354969436a58e0c53ad2b6f46
  $w$dGFromJSON1 ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser
         (GHC.Generics.K1 GHC.Generics.R [GHC.Types.Char] a1)
  {- Arity: 1, Strictness: <L,1*U>, Inline: [0],
     Unfolding: (\ @ a1 (w :: Data.Aeson.Types.Internal.Value) ->
                 let {
                   m :: Data.Aeson.Types.Internal.Parser [GHC.Types.Char]
                   = case w of wild {
                       DEFAULT
                       -> Data.Aeson.Types.Class.typeMismatch
                            @ [GHC.Types.Char]
                            Main.$fFromJSONUser8
                            wild
                       Data.Aeson.Types.Internal.String txt
                       -> case txt of wild1 { Data.Text.Internal.Text dt dt1 dt2 ->
                          let {
                            a2 :: [GHC.Types.Char]
                            = let {
                                end :: GHC.Prim.Int# = GHC.Prim.+# dt1 dt2
                              } in
                              letrec {
                                $wunfold :: GHC.Prim.Int# -> [GHC.Types.Char]
                                  {- Arity: 1, Strictness: <S,U>, Inline: [0] -}
                                = \ (ww :: GHC.Prim.Int#) ->
                                  case GHC.Prim.tagToEnum#
                                         @ GHC.Types.Bool
                                         (GHC.Prim.>=# ww end) of wild2 {
                                    GHC.Types.False
                                    -> case GHC.Prim.indexWord16Array# dt ww of r# { DEFAULT ->
                                       case GHC.Prim.tagToEnum#
                                              @ GHC.Types.Bool
                                              (GHC.Prim.geWord# r# 55296##) of wild3 {
                                         GHC.Types.False
                                         -> GHC.Types.:
                                              @ GHC.Types.Char
                                              (GHC.Types.C# (GHC.Prim.chr# (GHC.Prim.word2Int# r#)))
                                              ($wunfold (GHC.Prim.+# ww 1#))
                                         GHC.Types.True
                                         -> case GHC.Prim.tagToEnum#
                                                   @ GHC.Types.Bool
                                                   (GHC.Prim.leWord# r# 56319##) of wild4 {
                                              GHC.Types.False
                                              -> GHC.Types.:
                                                   @ GHC.Types.Char
                                                   (GHC.Types.C#
                                                      (GHC.Prim.chr# (GHC.Prim.word2Int# r#)))
                                                   ($wunfold (GHC.Prim.+# ww 1#))
                                              GHC.Types.True
                                              -> case GHC.Prim.indexWord16Array#
                                                        dt
                                                        (GHC.Prim.+# ww 1#) of r#1 { DEFAULT ->
                                                 GHC.Types.:
                                                   @ GHC.Types.Char
                                                   (GHC.Types.C#
                                                      (GHC.Prim.chr#
                                                         (GHC.Prim.+#
                                                            (GHC.Prim.+#
                                                               (GHC.Prim.uncheckedIShiftL#
                                                                  (GHC.Prim.-#
                                                                     (GHC.Prim.word2Int# r#)
                                                                     55296#)
                                                                  10#)
                                                               (GHC.Prim.-#
                                                                  (GHC.Prim.word2Int# r#1)
                                                                  56320#))
                                                            65536#)))
                                                   ($wunfold (GHC.Prim.+# ww 2#)) } } } }
                                    GHC.Types.True -> GHC.Types.[] @ GHC.Types.Char }
                              } in
                              $wunfold dt1
                          } in
                          (\ @ (f1 :: * -> *)
                             @ r
                             (_path :: Data.Aeson.Types.Internal.JSONPath)
                             (_kf :: Data.Aeson.Types.Internal.Failure f1 r)
                             (ks :: Data.Aeson.Types.Internal.Success [GHC.Types.Char] f1 r) ->
                           ks a2)
                            `cast`
                          (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                    <[GHC.Types.Char]>_R)) } }
                 } in
                 (\ @ (f1 :: * -> *)
                    @ r
                    (path :: Data.Aeson.Types.Internal.JSONPath)
                    (kf :: Data.Aeson.Types.Internal.Failure f1 r)
                    (ks :: Data.Aeson.Types.Internal.Success
                             (GHC.Generics.K1 GHC.Generics.R [GHC.Types.Char] a1) f1 r) ->
                  m `cast`
                  (Data.Aeson.Types.Internal.N:Parser[0] <[GHC.Types.Char]>_R)
                    @ f1
                    @ r
                    path
                    kf
                    (\ (a2 :: [GHC.Types.Char]) ->
                     ks
                       a2
                         `cast`
                       (Sym (GHC.Generics.N:K1[0]
                                 <GHC.Generics.R>_P <[GHC.Types.Char]>_R <a1>_P))))
                   `cast`
                 (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                           <GHC.Generics.K1 GHC.Generics.R [GHC.Types.Char] a1>_R))) -}
bb4f27a1b231a5b078616c40eed6758a
  $w$dGToJSON ::
    GHC.Generics.K1 GHC.Generics.R [GHC.Types.Char] a1
    -> (# Data.Text.Internal.Text #)
  {- Arity: 1, Strictness: <S,1*U>, Inline: [0],
     Unfolding: (\ @ a1
                   (w :: GHC.Generics.K1 GHC.Generics.R [GHC.Types.Char] a1) ->
                 case GHC.Magic.runRW#
                        @ 'GHC.Types.PtrRepLifted
                        @ Data.Text.Internal.Text
                        (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                         case GHC.Prim.newByteArray#
                                @ GHC.Prim.RealWorld
                                8#
                                s1 of ds1 { (#,#) ipv ipv1 ->
                         Main.$wouter
                           (Data.Text.Array.MArray @ GHC.Prim.RealWorld ipv1)
                           Main.$fToJSONUser2
                           w `cast`
                           (GHC.Generics.N:K1[0]
                                <GHC.Generics.R>_P <[GHC.Types.Char]>_R <a1>_P)
                           0#
                           ipv }) of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of dt { Data.Text.Internal.Text ipv2 ipv3 ipv4 ->
                 (# dt #) } }) -}
ec33fda3e39f239787ac4548363a1be4
  $wouter ::
    Data.Text.Array.MArray GHC.Prim.RealWorld
    -> GHC.Types.Int
    -> [GHC.Types.Char]
    -> GHC.Prim.Int#
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 5, Strictness: <L,U(U)><L,U(U)><S,1*U><S,U><S,U>,
     Inline: [0] -}
9e8a978cf82e4a17005f04ceaf18964a
  axiom Rep_User::
      GHC.Generics.Rep Main.User
        = GHC.Generics.D1
            ('GHC.Generics.MetaData "User" "Main" "main" 'GHC.Types.False)
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "User" 'GHC.Generics.PrefixI 'GHC.Types.True)
               (GHC.Generics.S1
                  ('GHC.Generics.MetaSel
                     ('GHC.Base.Just "userId")
                     'GHC.Generics.NoSourceUnpackedness
                     'GHC.Generics.NoSourceStrictness
                     'GHC.Generics.DecidedLazy)
                  (GHC.Generics.Rec0 GHC.Types.Int)
                GHC.Generics.:*: GHC.Generics.S1
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "userName")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 GHC.Base.String)))
9e8a978cf82e4a17005f04ceaf18964a
  data User
    = User {userId :: GHC.Types.Int, userName :: GHC.Base.String}
f8c5d9fb51d3c7412b4dfd5fe5ebf3e4
  allUsers :: [Main.User]
  {- Strictness: m2,
     Unfolding: (GHC.Types.: @ Main.User Main.bob Main.allUsers1) -}
a7a2ed612dc26c0f0d4e488a00041d80
  allUsers1 :: [Main.User]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Main.User
                   Main.jenny
                   (GHC.Types.[] @ Main.User)) -}
7a439d08d21831a14189357b3e1303f2
  blaze :: Text.Blaze.Html.Html -> Web.Scotty.ActionM ()
  {- Arity: 1, Strictness: <L,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Text.Blaze.Html.Html) ->
                 Web.Scotty.Action.$whtml
                   @ Data.Text.Internal.Lazy.Text
                   @ GHC.Types.IO
                   GHC.Base.$fMonadIO
                   (Text.Blaze.Renderer.Text.renderMarkupWith
                      Data.Text.Encoding.decodeUtf8
                      x)) -}
106e4d17e10629a01463d8d3edb76a6f
  bob :: Main.User
  {- Strictness: m, Unfolding: (Main.User Main.bob2 Main.bob1) -}
7f625337b0c80f6a502d6317fafe620a
  bob1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "bob"#) -}
3af28dd426405d4eb5d825dd664c1c50
  bob2 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 1#) -}
2fc54a0eac142df3e2e50b851bd3a234
  jenny :: Main.User
  {- Strictness: m, Unfolding: (Main.User Main.jenny2 Main.jenny1) -}
209151f437cced77ad1ee503f6c5c8b2
  jenny1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "jenny"#) -}
1dd0dafaa2c6489ee9d35720cfc93351
  jenny2 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 2#) -}
6c9dfe736b7a2a9fa1407a3abf5d746a
  main :: GHC.Types.IO ()
  {- Unfolding: (Web.Scotty.Trans.scottyOptsT
                   @ GHC.Types.IO
                   @ GHC.Types.IO
                   @ Data.Text.Internal.Lazy.Text
                   GHC.Base.$fMonadIO
                   Control.Monad.IO.Class.$fMonadIOIO
                   Main.main47
                   (GHC.Base.id @ (GHC.Types.IO Network.Wai.Internal.Response))
                   Main.main1
                     `cast`
                   (Trans
                        (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                                  <Web.Scotty.Internal.Types.ScottyState
                                     Data.Text.Internal.Lazy.Text GHC.Types.IO>_N
                                  <Data.Functor.Identity.Identity>_R
                                  <()>_N))
                        (Sym (Web.Scotty.Internal.Types.N:ScottyT[0]
                                  <Data.Text.Internal.Lazy.Text>_N <GHC.Types.IO>_N) <()>_N))) -}
d7d23b9bed82eef2f5a04dead0ed6632
  main1 ::
    Web.Scotty.Internal.Types.ScottyState
      Data.Text.Internal.Lazy.Text GHC.Types.IO
    -> Data.Functor.Identity.Identity
         ((),
          Web.Scotty.Internal.Types.ScottyState
            Data.Text.Internal.Lazy.Text GHC.Types.IO)
  {- Arity: 1,
     Unfolding: (\ (s1 :: Web.Scotty.Internal.Types.ScottyState
                            Data.Text.Internal.Lazy.Text GHC.Types.IO)[OneShot] ->
                 Main.main41
                   `cast`
                 (Trans
                      (Web.Scotty.Internal.Types.N:ScottyT[0]
                           <Data.Text.Internal.Lazy.Text>_N <GHC.Types.IO>_N <()>_N)
                      (Control.Monad.Trans.State.Lazy.N:StateT[0]
                           <Web.Scotty.Internal.Types.ScottyState
                              Data.Text.Internal.Lazy.Text GHC.Types.IO>_N
                           <Data.Functor.Identity.Identity>_R
                           <()>_N))
                   (case (Main.main36
                            `cast`
                          (Trans
                               (Web.Scotty.Internal.Types.N:ScottyT[0]
                                    <Data.Text.Internal.Lazy.Text>_N <GHC.Types.IO>_N <()>_N)
                               (Control.Monad.Trans.State.Lazy.N:StateT[0]
                                    <Web.Scotty.Internal.Types.ScottyState
                                       Data.Text.Internal.Lazy.Text GHC.Types.IO>_N
                                    <Data.Functor.Identity.Identity>_R
                                    <()>_N))
                            (case (Main.main31
                                     `cast`
                                   (Trans
                                        (Web.Scotty.Internal.Types.N:ScottyT[0]
                                             <Data.Text.Internal.Lazy.Text>_N
                                             <GHC.Types.IO>_N <()>_N)
                                        (Control.Monad.Trans.State.Lazy.N:StateT[0]
                                             <Web.Scotty.Internal.Types.ScottyState
                                                Data.Text.Internal.Lazy.Text GHC.Types.IO>_N
                                             <Data.Functor.Identity.Identity>_R
                                             <()>_N))
                                     (case (Main.main9
                                              `cast`
                                            (Trans
                                                 (Web.Scotty.Internal.Types.N:ScottyT[0]
                                                      <Data.Text.Internal.Lazy.Text>_N
                                                      <GHC.Types.IO>_N <()>_N)
                                                 (Control.Monad.Trans.State.Lazy.N:StateT[0]
                                                      <Web.Scotty.Internal.Types.ScottyState
                                                         Data.Text.Internal.Lazy.Text
                                                         GHC.Types.IO>_N
                                                      <Data.Functor.Identity.Identity>_R
                                                      <()>_N))
                                              (case (Main.main2
                                                       `cast`
                                                     (Trans
                                                          (Web.Scotty.Internal.Types.N:ScottyT[0]
                                                               <Data.Text.Internal.Lazy.Text>_N
                                                               <GHC.Types.IO>_N <()>_N)
                                                          (Control.Monad.Trans.State.Lazy.N:StateT[0]
                                                               <Web.Scotty.Internal.Types.ScottyState
                                                                  Data.Text.Internal.Lazy.Text
                                                                  GHC.Types.IO>_N
                                                               <Data.Functor.Identity.Identity>_R
                                                               <()>_N))
                                                       (Web.Scotty.Internal.Types.addMiddleware
                                                          @ Data.Text.Internal.Lazy.Text
                                                          @ GHC.Types.IO
                                                          Network.Wai.Middleware.RequestLogger.logStdoutDev
                                                          s1))
                                                      `cast`
                                                    (Data.Functor.Identity.N:Identity[0]
                                                         <((),
                                                           Web.Scotty.Internal.Types.ScottyState
                                                             Data.Text.Internal.Lazy.Text
                                                             GHC.Types.IO)>_R) of wild { (,) a1 s' ->
                                               s' }))
                                             `cast`
                                           (Data.Functor.Identity.N:Identity[0]
                                                <((),
                                                  Web.Scotty.Internal.Types.ScottyState
                                                    Data.Text.Internal.Lazy.Text
                                                    GHC.Types.IO)>_R) of wild { (,) a1 s' ->
                                      s' }))
                                    `cast`
                                  (Data.Functor.Identity.N:Identity[0]
                                       <((),
                                         Web.Scotty.Internal.Types.ScottyState
                                           Data.Text.Internal.Lazy.Text
                                           GHC.Types.IO)>_R) of wild { (,) a1 s' ->
                             s' }))
                           `cast`
                         (Data.Functor.Identity.N:Identity[0]
                              <((),
                                Web.Scotty.Internal.Types.ScottyState
                                  Data.Text.Internal.Lazy.Text
                                  GHC.Types.IO)>_R) of wild { (,) a1 s' ->
                    s' })) -}
1620eb5b9b4871b750ac69738385a426
  main10 ::
    Web.Scotty.Internal.Types.ActionT
      Data.Text.Internal.Lazy.Text GHC.Types.IO ()
  {- Unfolding: (Web.Scotty.Action.$whtml
                   @ Data.Text.Internal.Lazy.Text
                   @ GHC.Types.IO
                   GHC.Base.$fMonadIO
                   Main.main11) -}
a0ad7285a1c556295b45d5883c74e9f6
  main11 :: Data.Text.Internal.Lazy.Text
  {- Unfolding: (Text.Blaze.Renderer.Text.renderMarkupWith
                   Data.Text.Encoding.decodeUtf8
                   Main.main12) -}
5cf8c90e994918459f04fb1e95ee5039
  main12 :: Text.Blaze.Internal.MarkupM ()
  {- Unfolding: (Text.Blaze.Internal.Parent
                   @ ()
                   @ ()
                   Main.main24
                   Main.main20
                   Main.main16
                   Main.main13) -}
1d1d8d3dd0ca2c92723e4c10dc010091
  main13 :: Text.Blaze.Internal.MarkupM ()
  {- Unfolding: (Text.Blaze.Internal.Content @ () Main.main14) -}
7afd01c022aae329a9f90f8a9298edb8
  main14 :: Text.Blaze.Internal.ChoiceString
  {- Unfolding: (Text.Blaze.Internal.String Main.main15) -}
3ef4ae7cb003ceea52c936dff68d5f71
  main15 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# " Members "#) -}
91dfdeadbfd5094c03e493e18463e6ec
  main16 :: Text.Blaze.Internal.StaticString
  {- Unfolding: (Text.Blaze.Internal.StaticString
                   Main.main19
                   Main.main18
                   Main.main_t1) -}
66afa30c8d721c1e23748b4fd42243a1
  main17 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 1,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newByteArray#
                        @ GHC.Prim.RealWorld
                        8#
                        s1 of ds1 { (#,#) ipv ipv1 ->
                 Text.Blaze.Internal.$wouter
                   (Data.Text.Array.MArray @ GHC.Prim.RealWorld ipv1)
                   Text.Blaze.Internal.$fIsStringStaticString1
                   Main.main_w
                   0#
                   ipv }) -}
7127aefbf8985e2a6dca0959fd82b48b
  main18 :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case Main.main_t1 of ww { Data.Text.Internal.Text ww1 ww2 ww3 ->
                 Data.Text.Encoding.$wencodeUtf8 ww1 ww2 ww3 }) -}
ac95f2546e8b1be246cee0649535fe09
  main19 :: [GHC.Types.Char] -> [GHC.Types.Char]
  {- Arity: 1,
     Unfolding: (GHC.Base.++ @ GHC.Types.Char Main.main_w) -}
ae256fbc75822e4c18452ba31edcd9f3
  main2 ::
    Web.Scotty.Internal.Types.ScottyT
      Data.Text.Internal.Lazy.Text GHC.Types.IO ()
  {- Unfolding: (Main.main8
                   Network.HTTP.Types.Method.GET
                   Main.main5
                   Main.main3) -}
57ab40acaa4f6cffc98c5605c4247056
  main20 :: Text.Blaze.Internal.StaticString
  {- Unfolding: (Text.Blaze.Internal.StaticString
                   Main.main23
                   Main.main22
                   Main.main_t2) -}
407b2d1c0c232af6c1cf0dc355ec45bd
  main21 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 1,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newByteArray#
                        @ GHC.Prim.RealWorld
                        8#
                        s1 of ds1 { (#,#) ipv ipv1 ->
                 Text.Blaze.Internal.$wouter
                   (Data.Text.Array.MArray @ GHC.Prim.RealWorld ipv1)
                   Text.Blaze.Internal.$fIsStringStaticString1
                   Main.main_w1
                   0#
                   ipv }) -}
57239178d8ecd888862d7dd36dab090e
  main22 :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case Main.main_t2 of ww { Data.Text.Internal.Text ww1 ww2 ww3 ->
                 Data.Text.Encoding.$wencodeUtf8 ww1 ww2 ww3 }) -}
e373c967985e45628afca39bd3334b72
  main23 :: [GHC.Types.Char] -> [GHC.Types.Char]
  {- Arity: 1,
     Unfolding: (GHC.Base.++ @ GHC.Types.Char Main.main_w1) -}
562840840f9ee4a986fc202f43943fbe
  main24 :: Text.Blaze.Internal.StaticString
  {- Unfolding: (Text.Blaze.Internal.StaticString
                   Main.main27
                   Main.main26
                   Main.main_t3) -}
6162993165db0ebb25fea88f5a0ba6a3
  main25 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 1,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newByteArray#
                        @ GHC.Prim.RealWorld
                        8#
                        s1 of ds1 { (#,#) ipv ipv1 ->
                 Text.Blaze.Internal.$wouter
                   (Data.Text.Array.MArray @ GHC.Prim.RealWorld ipv1)
                   Text.Blaze.Internal.$fIsStringStaticString1
                   Main.main_w2
                   0#
                   ipv }) -}
aa6f3b3e06be1ccc8697fd289a7b36fe
  main26 :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case Main.main_t3 of ww { Data.Text.Internal.Text ww1 ww2 ww3 ->
                 Data.Text.Encoding.$wencodeUtf8 ww1 ww2 ww3 }) -}
2c3d923c548f0e54444b7bacb80c118d
  main27 :: [GHC.Types.Char] -> [GHC.Types.Char]
  {- Arity: 1,
     Unfolding: (GHC.Base.++ @ GHC.Types.Char Main.main_w2) -}
9747b4c9475eedda483fe34de3ff729c
  main28 :: Web.Scotty.Internal.Types.RoutePattern
  {- Unfolding: (Web.Scotty.Internal.Types.Capture Main.main29) -}
43ea456641f3a3b72f77a13aba18387e
  main29 :: Data.Text.Internal.Lazy.Text
  {- Unfolding: (case GHC.Base.map
                        @ GHC.Types.Char
                        @ GHC.Types.Char
                        Data.Text.Internal.safe
                        Main.main30 of dt { DEFAULT ->
                 Web.Scotty.Internal.Types.$fIsStringRoutePattern_outer dt }) -}
2fd16a79b78e0695900fb4e54f1ea36e
  main3 ::
    Web.Scotty.Internal.Types.ActionT
      Data.Text.Internal.Lazy.Text GHC.Types.IO ()
  {- Unfolding: (Web.Scotty.Action.$whtml
                   @ Data.Text.Internal.Lazy.Text
                   @ GHC.Types.IO
                   GHC.Base.$fMonadIO
                   Main.main4) -}
b8bfd24b612b318e317afab8ccb027b3
  main30 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "/members"#) -}
1545b6dff06c73e2dfaa1d2bac14670d
  main31 ::
    Web.Scotty.Internal.Types.ScottyT
      Data.Text.Internal.Lazy.Text GHC.Types.IO ()
  {- Unfolding: (Main.main8
                   Network.HTTP.Types.Method.GET
                   Main.main33
                   Main.main32
                     `cast`
                   (Trans
                        (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                  <*>_N
                                  <Web.Scotty.Internal.Types.ActionEnv>_R
                                  <Control.Monad.Trans.State.Lazy.StateT
                                     Web.Scotty.Internal.Types.ScottyResponse GHC.Types.IO>_R
                                  <Data.Either.Either
                                     (Web.Scotty.Internal.Types.ActionError
                                        Data.Text.Internal.Lazy.Text)
                                     ()>_N))
                        (Trans
                             (Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                       <Web.Scotty.Internal.Types.ActionError
                                          Data.Text.Internal.Lazy.Text>_N
                                       <Control.Monad.Trans.Reader.ReaderT
                                          Web.Scotty.Internal.Types.ActionEnv
                                          (Control.Monad.Trans.State.Lazy.StateT
                                             Web.Scotty.Internal.Types.ScottyResponse
                                             GHC.Types.IO)>_R
                                       <()>_N))
                             (Sym (Web.Scotty.Internal.Types.N:ActionT[0]
                                       <Data.Text.Internal.Lazy.Text>_N
                                       <GHC.Types.IO>_R) <()>_N)))) -}
03c5d6fc4cf4e1c02b0d2dbcbef2737d
  main32 ::
    Web.Scotty.Internal.Types.ActionEnv
    -> Control.Monad.Trans.State.Lazy.StateT
         Web.Scotty.Internal.Types.ScottyResponse
         GHC.Types.IO
         (Data.Either.Either
            (Web.Scotty.Internal.Types.ActionError
               Data.Text.Internal.Lazy.Text)
            ())
  {- Arity: 1 -}
8702b945ad3e363a483a7134c990fe7a
  main33 :: Web.Scotty.Internal.Types.RoutePattern
  {- Unfolding: (Web.Scotty.Internal.Types.Capture Main.main34) -}
52d5101b7434b0992ff5c6138033ff51
  main34 :: Data.Text.Internal.Lazy.Text
  {- Unfolding: (case GHC.Base.map
                        @ GHC.Types.Char
                        @ GHC.Types.Char
                        Data.Text.Internal.safe
                        Main.main35 of dt { DEFAULT ->
                 Web.Scotty.Internal.Types.$fIsStringRoutePattern_outer dt }) -}
5bad48776797ac0cc9aaa479a3b1c222
  main35 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "/members/:name"#) -}
f9461c834cbb4104046601077c22dc97
  main36 ::
    Web.Scotty.Internal.Types.ScottyT
      Data.Text.Internal.Lazy.Text GHC.Types.IO ()
  {- Unfolding: (Main.main8
                   Network.HTTP.Types.Method.GET
                   Main.main38
                   Main.main37) -}
127f188764066da9a343958bc434ac0b
  main37 ::
    Web.Scotty.Internal.Types.ActionT
      Data.Text.Internal.Lazy.Text GHC.Types.IO ()
  {- Unfolding: (Web.Scotty.Action.$wjson
                   @ [Main.User]
                   @ Data.Text.Internal.Lazy.Text
                   @ GHC.Types.IO
                   Main.$s$fToJSON[]
                   GHC.Base.$fMonadIO
                   Main.allUsers) -}
d1f85edd43823249ca8223e68b2d035b
  main38 :: Web.Scotty.Internal.Types.RoutePattern
  {- Unfolding: (Web.Scotty.Internal.Types.Capture Main.main39) -}
976d5bd8a685020b2d202a5150272d8d
  main39 :: Data.Text.Internal.Lazy.Text
  {- Unfolding: (case GHC.Base.map
                        @ GHC.Types.Char
                        @ GHC.Types.Char
                        Data.Text.Internal.safe
                        Main.main40 of dt { DEFAULT ->
                 Web.Scotty.Internal.Types.$fIsStringRoutePattern_outer dt }) -}
670e416ba07c013b7e633015c09e8b23
  main4 :: Data.Text.Internal.Lazy.Text
  {- Unfolding: (Text.Blaze.Renderer.Text.renderMarkupWith
                   Data.Text.Encoding.decodeUtf8
                   Views.Index.navbar) -}
fba922d899e8469d5c64ec16202930ff
  main40 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "/users"#) -}
e95720ef92a739ab46530432924f3a32
  main41 ::
    Web.Scotty.Internal.Types.ScottyT
      Data.Text.Internal.Lazy.Text GHC.Types.IO ()
  {- Unfolding: (Main.main8
                   Network.HTTP.Types.Method.GET
                   Main.main44
                   Main.main42
                     `cast`
                   (Trans
                        (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                  <*>_N
                                  <Web.Scotty.Internal.Types.ActionEnv>_R
                                  <Control.Monad.Trans.State.Lazy.StateT
                                     Web.Scotty.Internal.Types.ScottyResponse GHC.Types.IO>_R
                                  <Data.Either.Either
                                     (Web.Scotty.Internal.Types.ActionError
                                        Data.Text.Internal.Lazy.Text)
                                     ()>_N))
                        (Trans
                             (Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                       <Web.Scotty.Internal.Types.ActionError
                                          Data.Text.Internal.Lazy.Text>_N
                                       <Control.Monad.Trans.Reader.ReaderT
                                          Web.Scotty.Internal.Types.ActionEnv
                                          (Control.Monad.Trans.State.Lazy.StateT
                                             Web.Scotty.Internal.Types.ScottyResponse
                                             GHC.Types.IO)>_R
                                       <()>_N))
                             (Sym (Web.Scotty.Internal.Types.N:ActionT[0]
                                       <Data.Text.Internal.Lazy.Text>_N
                                       <GHC.Types.IO>_R) <()>_N)))) -}
c210e67e8999b6f39b513db96f395fd1
  main42 ::
    Web.Scotty.Internal.Types.ActionEnv
    -> Control.Monad.Trans.State.Lazy.StateT
         Web.Scotty.Internal.Types.ScottyResponse
         GHC.Types.IO
         (Data.Either.Either
            (Web.Scotty.Internal.Types.ActionError
               Data.Text.Internal.Lazy.Text)
            ())
  {- Arity: 1,
     Unfolding: (\ (w4 :: Web.Scotty.Internal.Types.ActionEnv) ->
                 let {
                   m1 :: Control.Monad.Trans.State.Lazy.StateT
                           Web.Scotty.Internal.Types.ScottyResponse
                           GHC.Types.IO
                           (Data.Either.Either
                              (Web.Scotty.Internal.Types.ActionError
                                 Data.Text.Internal.Lazy.Text)
                              GHC.Types.Int)
                   = Main.main_w3
                       `cast`
                     (Trans
                          (Web.Scotty.Internal.Types.N:ActionT[0]
                               <Data.Text.Internal.Lazy.Text>_N
                               <GHC.Types.IO>_R <GHC.Types.Int>_N)
                          (Trans
                               (Control.Monad.Trans.Except.N:ExceptT[0]
                                    <Web.Scotty.Internal.Types.ActionError
                                       Data.Text.Internal.Lazy.Text>_N
                                    <Control.Monad.Trans.Reader.ReaderT
                                       Web.Scotty.Internal.Types.ActionEnv
                                       (Control.Monad.Trans.State.Lazy.StateT
                                          Web.Scotty.Internal.Types.ScottyResponse GHC.Types.IO)>_R
                                    <GHC.Types.Int>_N)
                               (Control.Monad.Trans.Reader.N:ReaderT[0]
                                    <*>_N
                                    <Web.Scotty.Internal.Types.ActionEnv>_R
                                    <Control.Monad.Trans.State.Lazy.StateT
                                       Web.Scotty.Internal.Types.ScottyResponse GHC.Types.IO>_R
                                    <Data.Either.Either
                                       (Web.Scotty.Internal.Types.ActionError
                                          Data.Text.Internal.Lazy.Text)
                                       GHC.Types.Int>_N)))
                       w4
                 } in
                 (\ (s1 :: Web.Scotty.Internal.Types.ScottyResponse)
                    (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                  case (m1
                          `cast`
                        (Control.Monad.Trans.State.Lazy.N:StateT[0]
                             <Web.Scotty.Internal.Types.ScottyResponse>_N
                             <GHC.Types.IO>_R
                             <Data.Either.Either
                                (Web.Scotty.Internal.Types.ActionError
                                   Data.Text.Internal.Lazy.Text)
                                GHC.Types.Int>_N)
                          s1)
                         `cast`
                       (GHC.Types.N:IO[0]
                            <(Data.Either.Either
                                (Web.Scotty.Internal.Types.ActionError
                                   Data.Text.Internal.Lazy.Text)
                                GHC.Types.Int,
                              Web.Scotty.Internal.Types.ScottyResponse)>_R)
                         s of ds1 { (#,#) ipv ipv1 ->
                  case ipv1 of wild { (,) a1 s' ->
                  case a1 of wild1 {
                    Data.Either.Left e1
                    -> (# ipv,
                          (Data.Either.Left
                             @ (Web.Scotty.Internal.Types.ActionError
                                  Data.Text.Internal.Lazy.Text)
                             @ ()
                             e1,
                           s') #)
                    Data.Either.Right x
                    -> (((Web.Scotty.Action.$wjson
                            @ [Main.User]
                            @ Data.Text.Internal.Lazy.Text
                            @ GHC.Types.IO
                            Main.$s$fToJSON[]
                            GHC.Base.$fMonadIO
                            (GHC.List.filter @ Main.User (Main.matchesId x) Main.allUsers))
                           `cast`
                         (Trans
                              (Web.Scotty.Internal.Types.N:ActionT[0]
                                   <Data.Text.Internal.Lazy.Text>_N <GHC.Types.IO>_R <()>_N)
                              (Trans
                                   (Control.Monad.Trans.Except.N:ExceptT[0]
                                        <Web.Scotty.Internal.Types.ActionError
                                           Data.Text.Internal.Lazy.Text>_N
                                        <Control.Monad.Trans.Reader.ReaderT
                                           Web.Scotty.Internal.Types.ActionEnv
                                           (Control.Monad.Trans.State.Lazy.StateT
                                              Web.Scotty.Internal.Types.ScottyResponse
                                              GHC.Types.IO)>_R
                                        <()>_N)
                                   (Control.Monad.Trans.Reader.N:ReaderT[0]
                                        <*>_N
                                        <Web.Scotty.Internal.Types.ActionEnv>_R
                                        <Control.Monad.Trans.State.Lazy.StateT
                                           Web.Scotty.Internal.Types.ScottyResponse GHC.Types.IO>_R
                                        <Data.Either.Either
                                           (Web.Scotty.Internal.Types.ActionError
                                              Data.Text.Internal.Lazy.Text)
                                           ()>_N)))
                           w4)
                          `cast`
                        (Control.Monad.Trans.State.Lazy.N:StateT[0]
                             <Web.Scotty.Internal.Types.ScottyResponse>_N
                             <GHC.Types.IO>_R
                             <Data.Either.Either
                                (Web.Scotty.Internal.Types.ActionError
                                   Data.Text.Internal.Lazy.Text)
                                ()>_N)
                          s')
                         `cast`
                       (GHC.Types.N:IO[0]
                            <(Data.Either.Either
                                (Web.Scotty.Internal.Types.ActionError
                                   Data.Text.Internal.Lazy.Text)
                                (),
                              Web.Scotty.Internal.Types.ScottyResponse)>_R)
                         ipv } } })
                   `cast`
                 (Trans
                      (<Web.Scotty.Internal.Types.ScottyResponse>_R
                       ->_R Sym (GHC.Types.N:IO[0]
                                     <(Data.Either.Either
                                         (Web.Scotty.Internal.Types.ActionError
                                            Data.Text.Internal.Lazy.Text)
                                         (),
                                       Web.Scotty.Internal.Types.ScottyResponse)>_R))
                      (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                                <Web.Scotty.Internal.Types.ScottyResponse>_N
                                <GHC.Types.IO>_R
                                <Data.Either.Either
                                   (Web.Scotty.Internal.Types.ActionError
                                      Data.Text.Internal.Lazy.Text)
                                   ()>_N)))) -}
98137dd629834c2227a6bd2a7e25c6bf
  main43 :: Data.Text.Internal.Lazy.Text
  {- Unfolding: (Data.Text.Lazy.unpackCString# "id"#) -}
f324b66f0f42b0de57f5fded64ae3184
  main44 :: Web.Scotty.Internal.Types.RoutePattern
  {- Unfolding: (Web.Scotty.Internal.Types.Capture Main.main45) -}
64339e93ed101ef3be058d7e30894c7c
  main45 :: Data.Text.Internal.Lazy.Text
  {- Unfolding: (case GHC.Base.map
                        @ GHC.Types.Char
                        @ GHC.Types.Char
                        Data.Text.Internal.safe
                        Main.main46 of dt { DEFAULT ->
                 Web.Scotty.Internal.Types.$fIsStringRoutePattern_outer dt }) -}
86407771092758aa2cda6583b2c3af45
  main46 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "/users/:id"#) -}
5980c8846518b27e08776d46c5d28662
  main47 :: Web.Scotty.Internal.Types.Options
  {- Unfolding: (Web.Scotty.Internal.Types.Options
                   Web.Scotty.Internal.Types.$fDefaultOptions3
                   Main.main48) -}
6ddc7a69a62ab8933128e892bab139d3
  main48 :: Network.Wai.Handler.Warp.Settings.Settings
  {- Unfolding: (Network.Wai.Handler.Warp.Settings.Settings
                   Main.main49
                   Network.Wai.Handler.Warp.Settings.defaultSettings16
                   Network.Wai.Handler.Warp.Settings.defaultOnException1
                     `cast`
                   (<GHC.Base.Maybe Network.Wai.Internal.Request>_R
                    ->_R <GHC.Exception.SomeException>_R
                    ->_R Sym (GHC.Types.N:IO[0] <()>_R))
                   Network.Wai.Handler.Warp.Settings.defaultOnExceptionResponse
                   Network.Wai.Handler.Warp.Settings.defaultSettings14
                     `cast`
                   (<Network.Socket.Types.SockAddr>_R
                    ->_R Sym (GHC.Types.N:IO[0] <GHC.Types.Bool>_R))
                   Network.Wai.Handler.Warp.Settings.defaultSettings13
                     `cast`
                   (<Network.Socket.Types.SockAddr>_R
                    ->_R Sym (GHC.Types.N:IO[0] <()>_R))
                   Network.Wai.Handler.Warp.Settings.defaultSettings12
                   (GHC.Base.Nothing @ Network.Wai.Handler.Warp.Timeout.Manager)
                   Web.Scotty.Internal.Types.$fDefaultOptions2
                   Network.Wai.Handler.Warp.Settings.defaultSettings11
                   Network.Wai.Handler.Warp.Settings.defaultSettings9
                     `cast`
                   (Sym (GHC.Types.N:IO[0] <()>_R))
                   Network.Wai.Handler.Warp.Settings.defaultSettings10
                     `cast`
                   (<(forall a. GHC.Types.IO a -> GHC.Types.IO a)
                     -> GHC.Types.IO ()>_R
                    ->_R Sym (GHC.Types.N:IO[0] <()>_R))
                   GHC.Types.False
                   Network.Wai.Handler.Warp.Settings.defaultSettings8
                     `cast`
                   (<GHC.Types.IO ()>_R ->_R Sym (GHC.Types.N:IO[0] <()>_R))
                   Network.Wai.Handler.Warp.Settings.defaultSettings6
                   Network.Wai.Handler.Warp.Settings.defaultSettings4
                   Network.Wai.Handler.Warp.Settings.ProxyProtocolNone
                   Network.Wai.Handler.Warp.Settings.defaultSettings3
                   GHC.Types.True
                   Network.Wai.Handler.Warp.Settings.defaultSettings2
                     `cast`
                   (<Network.Wai.Internal.Request>_R
                    ->_R <Network.HTTP.Types.Status.Status>_R
                    ->_R <GHC.Base.Maybe GHC.Integer.Type.Integer>_R
                    ->_R Sym (GHC.Types.N:IO[0] <()>_R))
                   Network.Wai.Handler.Warp.Settings.defaultSettings1
                     `cast`
                   (<Network.Wai.Internal.Request>_R
                    ->_R <Data.ByteString.Internal.ByteString>_R
                    ->_R <GHC.Integer.Type.Integer>_R
                    ->_R Sym (GHC.Types.N:IO[0] <()>_R))
                   (GHC.Base.Nothing @ GHC.Types.Int)) -}
71596fbaa55ea1ac273c4f14f791bb08
  main49 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 3000#) -}
256e05315f5ed67c391c16a1b70dd1b5
  main5 :: Web.Scotty.Internal.Types.RoutePattern
  {- Unfolding: (Web.Scotty.Internal.Types.Capture Main.main6) -}
bb0eb5c8c1e6b48819089fd741c599cb
  main50 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (GHC.TopHandler.runMainIO1 @ () Main.main) -}
da80e90431e17bbafa21c3cea9e60716
  main6 :: Data.Text.Internal.Lazy.Text
  {- Unfolding: (case GHC.Base.map
                        @ GHC.Types.Char
                        @ GHC.Types.Char
                        Data.Text.Internal.safe
                        Main.main7 of dt { DEFAULT ->
                 Web.Scotty.Internal.Types.$fIsStringRoutePattern_outer dt }) -}
9783e1de6d6bed9a35beee8f25ec0b31
  main7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "/"#) -}
fa127b72ec2f2ae529c01b55d9a24912
  main8 ::
    Network.HTTP.Types.Method.StdMethod
    -> Web.Scotty.Internal.Types.RoutePattern
    -> Web.Scotty.Internal.Types.ActionT
         Data.Text.Internal.Lazy.Text GHC.Types.IO ()
    -> Web.Scotty.Internal.Types.ScottyT
         Data.Text.Internal.Lazy.Text GHC.Types.IO ()
  {- Unfolding: (Web.Scotty.Route.addroute
                   @ Data.Text.Internal.Lazy.Text
                   @ GHC.Types.IO
                   Web.Scotty.Internal.Types.$fScottyErrorText
                   Control.Monad.IO.Class.$fMonadIOIO) -}
62ad99564547cc8ad52099894138c84e
  main9 ::
    Web.Scotty.Internal.Types.ScottyT
      Data.Text.Internal.Lazy.Text GHC.Types.IO ()
  {- Unfolding: (Main.main8
                   Network.HTTP.Types.Method.GET
                   Main.main28
                   Main.main10) -}
18afae3b003675e660191c5114308459
  main_t1 :: Data.Text.Internal.Text
  {- Unfolding: (case GHC.Magic.runRW#
                        @ 'GHC.Types.PtrRepLifted
                        @ Data.Text.Internal.Text
                        Main.main17 of ds1 { (#,#) ipv ipv1 ->
                 ipv1 }) -}
cf242d0bde79a741b5a87306c6d53acb
  main_t2 :: Data.Text.Internal.Text
  {- Unfolding: (case GHC.Magic.runRW#
                        @ 'GHC.Types.PtrRepLifted
                        @ Data.Text.Internal.Text
                        Main.main21 of ds1 { (#,#) ipv ipv1 ->
                 ipv1 }) -}
92d0f0f6051635757431bc6759d52bb1
  main_t3 :: Data.Text.Internal.Text
  {- Unfolding: (case GHC.Magic.runRW#
                        @ 'GHC.Types.PtrRepLifted
                        @ Data.Text.Internal.Text
                        Main.main25 of ds1 { (#,#) ipv ipv1 ->
                 ipv1 }) -}
e338d78ef5e9f81f9a390d058b360df9
  main_w :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString# "</h1>"#) -}
cd859521b560d9b8adbc3717fbb00e99
  main_w1 :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString# "<h1"#) -}
d806004b2569bcbf9220b07648c8e1a4
  main_w2 :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString# "h1"#) -}
566100e59c792832cd173c17cce8c943
  main_w3 ::
    Web.Scotty.Internal.Types.ActionT
      Data.Text.Internal.Lazy.Text GHC.Types.IO GHC.Types.Int
  {- Unfolding: (Web.Scotty.Action.param
                   @ GHC.Types.Int
                   @ Data.Text.Internal.Lazy.Text
                   @ GHC.Types.IO
                   Web.Scotty.Action.$fParsableInt
                   Web.Scotty.Internal.Types.$fScottyErrorText
                   GHC.Base.$fMonadIO
                   Main.main43) -}
49efb7d68993c9b03066c5bd28152134
  matchesId :: GHC.Types.Int -> Main.User -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S),1*U(U)><S(S(S)L),1*U(1*U(U),A)>,
     Unfolding: InlineRule (2, True, False)
                (\ (id :: GHC.Types.Int) (user :: Main.User) ->
                 case user of wild { Main.User ds ds1 ->
                 GHC.Classes.eqInt ds id }) -}
ece69d5d19dad00776c837b90532e05d
  routes :: Web.Scotty.ScottyM ()
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.routes1
                  `cast`
                (Trans
                     (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                               <Web.Scotty.Internal.Types.ScottyState
                                  Data.Text.Internal.Lazy.Text GHC.Types.IO>_N
                               <Data.Functor.Identity.Identity>_R
                               <()>_N))
                     (Sym (Web.Scotty.Internal.Types.N:ScottyT[0]
                               <Data.Text.Internal.Lazy.Text>_N <GHC.Types.IO>_N) <()>_N)) -}
9c9ebe16490708538490d6478812131a
  routes1 ::
    Web.Scotty.Internal.Types.ScottyState
      Data.Text.Internal.Lazy.Text GHC.Types.IO
    -> Data.Functor.Identity.Identity
         ((),
          Web.Scotty.Internal.Types.ScottyState
            Data.Text.Internal.Lazy.Text GHC.Types.IO)
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (s1 :: Web.Scotty.Internal.Types.ScottyState
                            Data.Text.Internal.Lazy.Text GHC.Types.IO) ->
                 Main.main41
                   `cast`
                 (Trans
                      (Web.Scotty.Internal.Types.N:ScottyT[0]
                           <Data.Text.Internal.Lazy.Text>_N <GHC.Types.IO>_N <()>_N)
                      (Control.Monad.Trans.State.Lazy.N:StateT[0]
                           <Web.Scotty.Internal.Types.ScottyState
                              Data.Text.Internal.Lazy.Text GHC.Types.IO>_N
                           <Data.Functor.Identity.Identity>_R
                           <()>_N))
                   (case (Main.main36
                            `cast`
                          (Trans
                               (Web.Scotty.Internal.Types.N:ScottyT[0]
                                    <Data.Text.Internal.Lazy.Text>_N <GHC.Types.IO>_N <()>_N)
                               (Control.Monad.Trans.State.Lazy.N:StateT[0]
                                    <Web.Scotty.Internal.Types.ScottyState
                                       Data.Text.Internal.Lazy.Text GHC.Types.IO>_N
                                    <Data.Functor.Identity.Identity>_R
                                    <()>_N))
                            (case (Main.main31
                                     `cast`
                                   (Trans
                                        (Web.Scotty.Internal.Types.N:ScottyT[0]
                                             <Data.Text.Internal.Lazy.Text>_N
                                             <GHC.Types.IO>_N <()>_N)
                                        (Control.Monad.Trans.State.Lazy.N:StateT[0]
                                             <Web.Scotty.Internal.Types.ScottyState
                                                Data.Text.Internal.Lazy.Text GHC.Types.IO>_N
                                             <Data.Functor.Identity.Identity>_R
                                             <()>_N))
                                     (case (Main.main9
                                              `cast`
                                            (Trans
                                                 (Web.Scotty.Internal.Types.N:ScottyT[0]
                                                      <Data.Text.Internal.Lazy.Text>_N
                                                      <GHC.Types.IO>_N <()>_N)
                                                 (Control.Monad.Trans.State.Lazy.N:StateT[0]
                                                      <Web.Scotty.Internal.Types.ScottyState
                                                         Data.Text.Internal.Lazy.Text
                                                         GHC.Types.IO>_N
                                                      <Data.Functor.Identity.Identity>_R
                                                      <()>_N))
                                              (case (Main.main2
                                                       `cast`
                                                     (Trans
                                                          (Web.Scotty.Internal.Types.N:ScottyT[0]
                                                               <Data.Text.Internal.Lazy.Text>_N
                                                               <GHC.Types.IO>_N <()>_N)
                                                          (Control.Monad.Trans.State.Lazy.N:StateT[0]
                                                               <Web.Scotty.Internal.Types.ScottyState
                                                                  Data.Text.Internal.Lazy.Text
                                                                  GHC.Types.IO>_N
                                                               <Data.Functor.Identity.Identity>_R
                                                               <()>_N))
                                                       s1)
                                                      `cast`
                                                    (Data.Functor.Identity.N:Identity[0]
                                                         <((),
                                                           Web.Scotty.Internal.Types.ScottyState
                                                             Data.Text.Internal.Lazy.Text
                                                             GHC.Types.IO)>_R) of wild { (,) a1 s' ->
                                               s' }))
                                             `cast`
                                           (Data.Functor.Identity.N:Identity[0]
                                                <((),
                                                  Web.Scotty.Internal.Types.ScottyState
                                                    Data.Text.Internal.Lazy.Text
                                                    GHC.Types.IO)>_R) of wild { (,) a1 s' ->
                                      s' }))
                                    `cast`
                                  (Data.Functor.Identity.N:Identity[0]
                                       <((),
                                         Web.Scotty.Internal.Types.ScottyState
                                           Data.Text.Internal.Lazy.Text
                                           GHC.Types.IO)>_R) of wild { (,) a1 s' ->
                             s' }))
                           `cast`
                         (Data.Functor.Identity.N:Identity[0]
                              <((),
                                Web.Scotty.Internal.Types.ScottyState
                                  Data.Text.Internal.Lazy.Text
                                  GHC.Types.IO)>_R) of wild { (,) a1 s' ->
                    s' })) -}
ff202998fab5707c1d835f6d84de4fa6
  userId :: Main.User -> GHC.Types.Int
  RecSel Left Main.User
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SL),1*U(1*U(U),A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Main.User) ->
                 case ds of wild { Main.User ds1 ds2 -> ds1 }) -}
ae3a647c55c7507e4f6747f0600fdf69
  userName :: Main.User -> GHC.Base.String
  RecSel Left Main.User
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LS),1*U(A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Main.User) ->
                 case ds of wild { Main.User ds1 ds2 -> ds2 }) -}
instance Data.Aeson.Types.Class.FromJSON [Main.User]
  = Main.$fFromJSONUser
instance GHC.Generics.Generic [Main.User] = Main.$fGenericUser
instance GHC.Show.Show [Main.User] = Main.$fShowUser
instance Data.Aeson.Types.Class.ToJSON [Main.User]
  = Main.$fToJSONUser
family instance GHC.Generics.Rep [Main.User] = Main.Rep_User
"SPEC/Main $fSelectorMetaMetaSel @ ('Just
                                     "userId") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [ALWAYS] forall ($dSingI :: GHC.Generics.SingI
                                                                                                                                                                                     ('GHC.Base.Just
                                                                                                                                                                                        "userId"))
                                                                                                                                                                       ($dSingI1 :: GHC.Generics.SingI
                                                                                                                                                                                      'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                       ($dSingI2 :: GHC.Generics.SingI
                                                                                                                                                                                      'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                       ($dSingI3 :: GHC.Generics.SingI
                                                                                                                                                                                      'GHC.Generics.DecidedLazy)
  GHC.Generics.$fSelectorMetaMetaSel @ ('GHC.Base.Just "userId")
                                     @ 'GHC.Generics.NoSourceUnpackedness
                                     @ 'GHC.Generics.NoSourceStrictness
                                     @ 'GHC.Generics.DecidedLazy
                                     $dSingI
                                     $dSingI1
                                     $dSingI2
                                     $dSingI3
  = Main.$fFromJSONUser_$s$fSelectorMetaMetaSel
"SPEC/Main $fSelectorMetaMetaSel @ ('Just
                                     "userName") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [ALWAYS] forall ($dSingI :: GHC.Generics.SingI
                                                                                                                                                                                       ('GHC.Base.Just
                                                                                                                                                                                          "userName"))
                                                                                                                                                                         ($dSingI1 :: GHC.Generics.SingI
                                                                                                                                                                                        'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                         ($dSingI2 :: GHC.Generics.SingI
                                                                                                                                                                                        'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                         ($dSingI3 :: GHC.Generics.SingI
                                                                                                                                                                                        'GHC.Generics.DecidedLazy)
  GHC.Generics.$fSelectorMetaMetaSel @ ('GHC.Base.Just "userName")
                                     @ 'GHC.Generics.NoSourceUnpackedness
                                     @ 'GHC.Generics.NoSourceStrictness
                                     @ 'GHC.Generics.DecidedLazy
                                     $dSingI
                                     $dSingI1
                                     $dSingI2
                                     $dSingI3
  = Main.$fFromJSONUser_$s$fSelectorMetaMetaSel1
"SPEC/Main $fSelectorMetaMetaSel_$cselName @ ('Just
                                               "userId") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [ALWAYS] forall ($dSingI :: GHC.Generics.SingI
                                                                                                                                                                                                         ('GHC.Base.Just
                                                                                                                                                                                                            "userId"))
                                                                                                                                                                                           ($dSingI1 :: GHC.Generics.SingI
                                                                                                                                                                                                          'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                                           ($dSingI2 :: GHC.Generics.SingI
                                                                                                                                                                                                          'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                                           ($dSingI3 :: GHC.Generics.SingI
                                                                                                                                                                                                          'GHC.Generics.DecidedLazy)
  GHC.Generics.$fSelectorMetaMetaSel_$cselName @ ('GHC.Base.Just
                                                    "userId")
                                               @ 'GHC.Generics.NoSourceUnpackedness
                                               @ 'GHC.Generics.NoSourceStrictness
                                               @ 'GHC.Generics.DecidedLazy
                                               $dSingI
                                               $dSingI1
                                               $dSingI2
                                               $dSingI3
  = Main.$fFromJSONUser_$s$fSelectorMetaMetaSel_$cselName
"SPEC/Main $fSelectorMetaMetaSel_$cselName @ ('Just
                                               "userName") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [ALWAYS] forall ($dSingI :: GHC.Generics.SingI
                                                                                                                                                                                                           ('GHC.Base.Just
                                                                                                                                                                                                              "userName"))
                                                                                                                                                                                             ($dSingI1 :: GHC.Generics.SingI
                                                                                                                                                                                                            'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                                             ($dSingI2 :: GHC.Generics.SingI
                                                                                                                                                                                                            'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                                             ($dSingI3 :: GHC.Generics.SingI
                                                                                                                                                                                                            'GHC.Generics.DecidedLazy)
  GHC.Generics.$fSelectorMetaMetaSel_$cselName @ ('GHC.Base.Just
                                                    "userName")
                                               @ 'GHC.Generics.NoSourceUnpackedness
                                               @ 'GHC.Generics.NoSourceStrictness
                                               @ 'GHC.Generics.DecidedLazy
                                               $dSingI
                                               $dSingI1
                                               $dSingI2
                                               $dSingI3
  = Main.$fFromJSONUser_$s$fSelectorMetaMetaSel_$cselName1
"SPEC/Main $fToJSON[] @ User" [ALWAYS] forall ($dToJSON :: Data.Aeson.Types.Class.ToJSON
                                                             Main.User)
  Data.Aeson.Types.Instances.$fToJSON[] @ Main.User $dToJSON
  = Main.$s$fToJSON[]
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

